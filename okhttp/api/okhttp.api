public final class okhttp3/Address {
	public final fun -deprecated_certificatePinner ()Lokhttp3/CertificatePinner;
	public final fun -deprecated_connectionSpecs ()Ljava/util/List;
	public final fun -deprecated_dns ()Lokhttp3/Dns;
	public final fun -deprecated_hostnameVerifier ()Ljavax/net/ssl/HostnameVerifier;
	public final fun -deprecated_protocols ()Ljava/util/List;
	public final fun -deprecated_proxy ()Ljava/net/Proxy;
	public final fun -deprecated_proxyAuthenticator ()Lokhttp3/Authenticator;
	public final fun -deprecated_proxySelector ()Ljava/net/ProxySelector;
	public final fun -deprecated_socketFactory ()Ljavax/net/SocketFactory;
	public final fun -deprecated_sslSocketFactory ()Ljavax/net/ssl/SSLSocketFactory;
	public final fun -deprecated_url ()Lokhttp3/HttpUrl;
	public fun <init> (Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V
	public final fun certificatePinner ()Lokhttp3/CertificatePinner;
	public final fun connectionSpecs ()Ljava/util/List;
	public final fun dns ()Lokhttp3/Dns;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun hostnameVerifier ()Ljavax/net/ssl/HostnameVerifier;
	public final fun protocols ()Ljava/util/List;
	public final fun proxy ()Ljava/net/Proxy;
	public final fun proxyAuthenticator ()Lokhttp3/Authenticator;
	public final fun proxySelector ()Ljava/net/ProxySelector;
	public final fun socketFactory ()Ljavax/net/SocketFactory;
	public final fun sslSocketFactory ()Ljavax/net/ssl/SSLSocketFactory;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Lokhttp3/HttpUrl;
}

public abstract interface class okhttp3/Authenticator {
	public static final field Companion Lokhttp3/Authenticator$Companion;
	public static final field JAVA_NET_AUTHENTICATOR Lokhttp3/Authenticator;
	public static final field NONE Lokhttp3/Authenticator;
	public abstract fun authenticate (Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
}

public final class okhttp3/Authenticator$Companion {
}

public final class okhttp3/Cache : java/io/Closeable, java/io/Flushable {
	public static final field Companion Lokhttp3/Cache$Companion;
	public final fun -deprecated_directory ()Ljava/io/File;
	public fun <init> (Ljava/io/File;J)V
	public fun close ()V
	public final fun delete ()V
	public final fun directory ()Ljava/io/File;
	public final fun evictAll ()V
	public fun flush ()V
	public final fun hitCount ()I
	public final fun initialize ()V
	public final fun isClosed ()Z
	public static final fun key (Lokhttp3/HttpUrl;)Ljava/lang/String;
	public final fun maxSize ()J
	public final fun networkCount ()I
	public final fun requestCount ()I
	public final fun size ()J
	public final fun urls ()Ljava/util/Iterator;
	public final fun writeAbortCount ()I
	public final fun writeSuccessCount ()I
}

public final class okhttp3/Cache$Companion {
	public final fun hasVaryAll (Lokhttp3/Response;)Z
	public final fun key (Lokhttp3/HttpUrl;)Ljava/lang/String;
	public final fun varyHeaders (Lokhttp3/Response;)Lokhttp3/Headers;
	public final fun varyMatches (Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z
}

public final class okhttp3/CacheControl {
	public static final field Companion Lokhttp3/CacheControl$Companion;
	public static final field FORCE_CACHE Lokhttp3/CacheControl;
	public static final field FORCE_NETWORK Lokhttp3/CacheControl;
	public final fun -deprecated_immutable ()Z
	public final fun -deprecated_maxAgeSeconds ()I
	public final fun -deprecated_maxStaleSeconds ()I
	public final fun -deprecated_minFreshSeconds ()I
	public final fun -deprecated_mustRevalidate ()Z
	public final fun -deprecated_noCache ()Z
	public final fun -deprecated_noStore ()Z
	public final fun -deprecated_noTransform ()Z
	public final fun -deprecated_onlyIfCached ()Z
	public final fun -deprecated_sMaxAgeSeconds ()I
	public synthetic fun <init> (ZZIIZZZIIZZZLjava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun immutable ()Z
	public final fun isPrivate ()Z
	public final fun isPublic ()Z
	public final fun maxAgeSeconds ()I
	public final fun maxStaleSeconds ()I
	public final fun minFreshSeconds ()I
	public final fun mustRevalidate ()Z
	public final fun noCache ()Z
	public final fun noStore ()Z
	public final fun noTransform ()Z
	public final fun onlyIfCached ()Z
	public static final fun parse (Lokhttp3/Headers;)Lokhttp3/CacheControl;
	public final fun sMaxAgeSeconds ()I
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/CacheControl$Builder {
	public fun <init> ()V
	public final fun build ()Lokhttp3/CacheControl;
	public final fun immutable ()Lokhttp3/CacheControl$Builder;
	public final fun maxAge (ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
	public final fun maxStale (ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
	public final fun minFresh (ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;
	public final fun noCache ()Lokhttp3/CacheControl$Builder;
	public final fun noStore ()Lokhttp3/CacheControl$Builder;
	public final fun noTransform ()Lokhttp3/CacheControl$Builder;
	public final fun onlyIfCached ()Lokhttp3/CacheControl$Builder;
}

public final class okhttp3/CacheControl$Companion {
	public final fun parse (Lokhttp3/Headers;)Lokhttp3/CacheControl;
}

public abstract interface class okhttp3/Call : java/lang/Cloneable {
	public abstract fun cancel ()V
	public abstract fun clone ()Lokhttp3/Call;
	public abstract fun enqueue (Lokhttp3/Callback;)V
	public abstract fun execute ()Lokhttp3/Response;
	public abstract fun isCanceled ()Z
	public abstract fun isExecuted ()Z
	public abstract fun request ()Lokhttp3/Request;
	public abstract fun timeout ()Lokio/Timeout;
}

public abstract interface class okhttp3/Call$Factory {
	public abstract fun newCall (Lokhttp3/Request;)Lokhttp3/Call;
}

public abstract interface class okhttp3/Callback {
	public abstract fun onFailure (Lokhttp3/Call;Ljava/io/IOException;)V
	public abstract fun onResponse (Lokhttp3/Call;Lokhttp3/Response;)V
}

public final class okhttp3/CertificatePinner {
	public static final field Companion Lokhttp3/CertificatePinner$Companion;
	public static final field DEFAULT Lokhttp3/CertificatePinner;
	public final fun check (Ljava/lang/String;Ljava/util/List;)V
	public final fun check (Ljava/lang/String;[Ljava/security/cert/Certificate;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun findMatchingPins (Ljava/lang/String;)Ljava/util/List;
	public final fun getPins ()Ljava/util/Set;
	public fun hashCode ()I
	public static final fun pin (Ljava/security/cert/Certificate;)Ljava/lang/String;
	public static final fun sha1Hash (Ljava/security/cert/X509Certificate;)Lokio/ByteString;
	public static final fun sha256Hash (Ljava/security/cert/X509Certificate;)Lokio/ByteString;
}

public final class okhttp3/CertificatePinner$Builder {
	public fun <init> ()V
	public final fun add (Ljava/lang/String;[Ljava/lang/String;)Lokhttp3/CertificatePinner$Builder;
	public final fun build ()Lokhttp3/CertificatePinner;
	public final fun getPins ()Ljava/util/List;
}

public final class okhttp3/CertificatePinner$Companion {
	public final fun pin (Ljava/security/cert/Certificate;)Ljava/lang/String;
	public final fun sha1Hash (Ljava/security/cert/X509Certificate;)Lokio/ByteString;
	public final fun sha256Hash (Ljava/security/cert/X509Certificate;)Lokio/ByteString;
}

public final class okhttp3/CertificatePinner$Pin {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHash ()Lokio/ByteString;
	public final fun getHashAlgorithm ()Ljava/lang/String;
	public final fun getPattern ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun matchesCertificate (Ljava/security/cert/X509Certificate;)Z
	public final fun matchesHostname (Ljava/lang/String;)Z
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/Challenge {
	public final fun -deprecated_authParams ()Ljava/util/Map;
	public final fun -deprecated_charset ()Ljava/nio/charset/Charset;
	public final fun -deprecated_realm ()Ljava/lang/String;
	public final fun -deprecated_scheme ()Ljava/lang/String;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/util/Map;)V
	public final fun authParams ()Ljava/util/Map;
	public final fun charset ()Ljava/nio/charset/Charset;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun realm ()Ljava/lang/String;
	public final fun scheme ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun withCharset (Ljava/nio/charset/Charset;)Lokhttp3/Challenge;
}

public final class okhttp3/CipherSuite {
	public static final field Companion Lokhttp3/CipherSuite$Companion;
	public static final field TLS_AES_128_CCM_8_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_AES_128_CCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_CHACHA20_POLY1305_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_DSS_WITH_DES_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DHE_RSA_WITH_DES_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_EXPORT_WITH_RC4_40_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_256_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_DES_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_DH_anon_WITH_RC4_128_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_ECDSA_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDHE_RSA_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_ECDSA_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_RSA_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_anon_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_anon_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_anon_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_ECDH_anon_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_EMPTY_RENEGOTIATION_INFO_SCSV Lokhttp3/CipherSuite;
	public static final field TLS_FALLBACK_SCSV Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_EXPORT_WITH_RC4_40_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_EXPORT_WITH_RC4_40_SHA Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_3DES_EDE_CBC_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_DES_CBC_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_DES_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_RC4_128_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_KRB5_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_PSK_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_PSK_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_PSK_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_PSK_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_EXPORT_WITH_DES40_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_EXPORT_WITH_RC4_40_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_3DES_EDE_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_128_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_128_GCM_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_256_CBC_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_AES_256_GCM_SHA384 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_CAMELLIA_128_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_CAMELLIA_256_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_DES_CBC_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_NULL_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_NULL_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_NULL_SHA256 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_RC4_128_MD5 Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_RC4_128_SHA Lokhttp3/CipherSuite;
	public static final field TLS_RSA_WITH_SEED_CBC_SHA Lokhttp3/CipherSuite;
	public final fun -deprecated_javaName ()Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public static final fun forJavaName (Ljava/lang/String;)Lokhttp3/CipherSuite;
	public final fun javaName ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/CipherSuite$Companion {
	public final fun forJavaName (Ljava/lang/String;)Lokhttp3/CipherSuite;
}

public abstract interface class okhttp3/Connection {
	public abstract fun handshake ()Lokhttp3/Handshake;
	public abstract fun protocol ()Lokhttp3/Protocol;
	public abstract fun route ()Lokhttp3/Route;
	public abstract fun socket ()Ljava/net/Socket;
}

public final class okhttp3/ConnectionPool {
	public fun <init> ()V
	public fun <init> (IJLjava/util/concurrent/TimeUnit;)V
	public final fun connectionCount ()I
	public final fun evictAll ()V
	public final fun idleConnectionCount ()I
}

public final class okhttp3/ConnectionSpec {
	public static final field CLEARTEXT Lokhttp3/ConnectionSpec;
	public static final field COMPATIBLE_TLS Lokhttp3/ConnectionSpec;
	public static final field Companion Lokhttp3/ConnectionSpec$Companion;
	public static final field MODERN_TLS Lokhttp3/ConnectionSpec;
	public static final field RESTRICTED_TLS Lokhttp3/ConnectionSpec;
	public final fun -deprecated_cipherSuites ()Ljava/util/List;
	public final fun -deprecated_supportsTlsExtensions ()Z
	public final fun -deprecated_tlsVersions ()Ljava/util/List;
	public final fun cipherSuites ()Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun isCompatible (Ljavax/net/ssl/SSLSocket;)Z
	public final fun isTls ()Z
	public final fun supportsTlsExtensions ()Z
	public final fun tlsVersions ()Ljava/util/List;
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/ConnectionSpec$Builder {
	public fun <init> (Lokhttp3/ConnectionSpec;)V
	public final fun allEnabledCipherSuites ()Lokhttp3/ConnectionSpec$Builder;
	public final fun allEnabledTlsVersions ()Lokhttp3/ConnectionSpec$Builder;
	public final fun build ()Lokhttp3/ConnectionSpec;
	public final fun cipherSuites ([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
	public final fun cipherSuites ([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;
	public final fun supportsTlsExtensions (Z)Lokhttp3/ConnectionSpec$Builder;
	public final fun tlsVersions ([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;
	public final fun tlsVersions ([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;
}

public final class okhttp3/ConnectionSpec$Companion {
}

public final class okhttp3/Cookie {
	public static final field Companion Lokhttp3/Cookie$Companion;
	public final fun -deprecated_domain ()Ljava/lang/String;
	public final fun -deprecated_expiresAt ()J
	public final fun -deprecated_hostOnly ()Z
	public final fun -deprecated_httpOnly ()Z
	public final fun -deprecated_name ()Ljava/lang/String;
	public final fun -deprecated_path ()Ljava/lang/String;
	public final fun -deprecated_persistent ()Z
	public final fun -deprecated_secure ()Z
	public final fun -deprecated_value ()Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun domain ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun expiresAt ()J
	public fun hashCode ()I
	public final fun hostOnly ()Z
	public final fun httpOnly ()Z
	public final fun matches (Lokhttp3/HttpUrl;)Z
	public final fun name ()Ljava/lang/String;
	public static final fun parse (Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
	public static final fun parseAll (Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;
	public final fun path ()Ljava/lang/String;
	public final fun persistent ()Z
	public final fun secure ()Z
	public fun toString ()Ljava/lang/String;
	public final fun value ()Ljava/lang/String;
}

public final class okhttp3/Cookie$Builder {
	public fun <init> ()V
	public final fun build ()Lokhttp3/Cookie;
	public final fun domain (Ljava/lang/String;)Lokhttp3/Cookie$Builder;
	public final fun expiresAt (J)Lokhttp3/Cookie$Builder;
	public final fun hostOnlyDomain (Ljava/lang/String;)Lokhttp3/Cookie$Builder;
	public final fun httpOnly ()Lokhttp3/Cookie$Builder;
	public final fun name (Ljava/lang/String;)Lokhttp3/Cookie$Builder;
	public final fun path (Ljava/lang/String;)Lokhttp3/Cookie$Builder;
	public final fun secure ()Lokhttp3/Cookie$Builder;
	public final fun value (Ljava/lang/String;)Lokhttp3/Cookie$Builder;
}

public final class okhttp3/Cookie$Companion {
	public final fun parse (Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;
	public final fun parseAll (Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;
}

public abstract interface class okhttp3/CookieJar {
	public static final field Companion Lokhttp3/CookieJar$Companion;
	public static final field NO_COOKIES Lokhttp3/CookieJar;
	public abstract fun loadForRequest (Lokhttp3/HttpUrl;)Ljava/util/List;
	public abstract fun saveFromResponse (Lokhttp3/HttpUrl;Ljava/util/List;)V
}

public final class okhttp3/CookieJar$Companion {
}

public final class okhttp3/Credentials {
	public static final field INSTANCE Lokhttp3/Credentials;
	public static final fun basic (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static final fun basic (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
	public static synthetic fun basic$default (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/lang/String;
}

public final class okhttp3/Dispatcher {
	public final fun -deprecated_executorService ()Ljava/util/concurrent/ExecutorService;
	public fun <init> ()V
	public fun <init> (Ljava/util/concurrent/ExecutorService;)V
	public final fun cancelAll ()V
	public final fun executorService ()Ljava/util/concurrent/ExecutorService;
	public final fun getIdleCallback ()Ljava/lang/Runnable;
	public final fun getMaxRequests ()I
	public final fun getMaxRequestsPerHost ()I
	public final fun queuedCalls ()Ljava/util/List;
	public final fun queuedCallsCount ()I
	public final fun runningCalls ()Ljava/util/List;
	public final fun runningCallsCount ()I
	public final fun setIdleCallback (Ljava/lang/Runnable;)V
	public final fun setMaxRequests (I)V
	public final fun setMaxRequestsPerHost (I)V
}

public abstract interface class okhttp3/Dns {
	public static final field Companion Lokhttp3/Dns$Companion;
	public static final field SYSTEM Lokhttp3/Dns;
	public abstract fun lookup (Ljava/lang/String;)Ljava/util/List;
}

public final class okhttp3/Dns$Companion {
}

public abstract class okhttp3/EventListener {
	public static final field Companion Lokhttp3/EventListener$Companion;
	public static final field NONE Lokhttp3/EventListener;
	public fun <init> ()V
	public fun cacheConditionalHit (Lokhttp3/Call;Lokhttp3/Response;)V
	public fun cacheHit (Lokhttp3/Call;Lokhttp3/Response;)V
	public fun cacheMiss (Lokhttp3/Call;)V
	public fun callEnd (Lokhttp3/Call;)V
	public fun callFailed (Lokhttp3/Call;Ljava/io/IOException;)V
	public fun callStart (Lokhttp3/Call;)V
	public fun canceled (Lokhttp3/Call;)V
	public fun connectEnd (Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V
	public fun connectFailed (Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V
	public fun connectStart (Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V
	public fun connectionAcquired (Lokhttp3/Call;Lokhttp3/Connection;)V
	public fun connectionReleased (Lokhttp3/Call;Lokhttp3/Connection;)V
	public fun dnsEnd (Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V
	public fun dnsStart (Lokhttp3/Call;Ljava/lang/String;)V
	public fun proxySelectEnd (Lokhttp3/Call;Lokhttp3/HttpUrl;Ljava/util/List;)V
	public fun proxySelectStart (Lokhttp3/Call;Lokhttp3/HttpUrl;)V
	public fun requestBodyEnd (Lokhttp3/Call;J)V
	public fun requestBodyStart (Lokhttp3/Call;)V
	public fun requestFailed (Lokhttp3/Call;Ljava/io/IOException;)V
	public fun requestHeadersEnd (Lokhttp3/Call;Lokhttp3/Request;)V
	public fun requestHeadersStart (Lokhttp3/Call;)V
	public fun responseBodyEnd (Lokhttp3/Call;J)V
	public fun responseBodyStart (Lokhttp3/Call;)V
	public fun responseFailed (Lokhttp3/Call;Ljava/io/IOException;)V
	public fun responseHeadersEnd (Lokhttp3/Call;Lokhttp3/Response;)V
	public fun responseHeadersStart (Lokhttp3/Call;)V
	public fun satisfactionFailure (Lokhttp3/Call;Lokhttp3/Response;)V
	public fun secureConnectEnd (Lokhttp3/Call;Lokhttp3/Handshake;)V
	public fun secureConnectStart (Lokhttp3/Call;)V
}

public final class okhttp3/EventListener$Companion {
}

public abstract interface class okhttp3/EventListener$Factory {
	public abstract fun create (Lokhttp3/Call;)Lokhttp3/EventListener;
}

public final class okhttp3/FormBody : okhttp3/RequestBody {
	public static final field Companion Lokhttp3/FormBody$Companion;
	public final fun -deprecated_size ()I
	public fun contentLength ()J
	public fun contentType ()Lokhttp3/MediaType;
	public final fun encodedName (I)Ljava/lang/String;
	public final fun encodedValue (I)Ljava/lang/String;
	public final fun name (I)Ljava/lang/String;
	public final fun size ()I
	public final fun value (I)Ljava/lang/String;
	public fun writeTo (Lokio/BufferedSink;)V
}

public final class okhttp3/FormBody$Builder {
	public fun <init> ()V
	public fun <init> (Ljava/nio/charset/Charset;)V
	public synthetic fun <init> (Ljava/nio/charset/Charset;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun add (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;
	public final fun addEncoded (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/FormBody$Builder;
	public final fun build ()Lokhttp3/FormBody;
}

public final class okhttp3/FormBody$Companion {
}

public final class okhttp3/Handshake {
	public static final field Companion Lokhttp3/Handshake$Companion;
	public final fun -deprecated_cipherSuite ()Lokhttp3/CipherSuite;
	public final fun -deprecated_localCertificates ()Ljava/util/List;
	public final fun -deprecated_localPrincipal ()Ljava/security/Principal;
	public final fun -deprecated_peerCertificates ()Ljava/util/List;
	public final fun -deprecated_peerPrincipal ()Ljava/security/Principal;
	public final fun -deprecated_tlsVersion ()Lokhttp3/TlsVersion;
	public final fun cipherSuite ()Lokhttp3/CipherSuite;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun get (Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
	public static final fun get (Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
	public fun hashCode ()I
	public final fun localCertificates ()Ljava/util/List;
	public final fun localPrincipal ()Ljava/security/Principal;
	public final fun peerCertificates ()Ljava/util/List;
	public final fun peerPrincipal ()Ljava/security/Principal;
	public final fun tlsVersion ()Lokhttp3/TlsVersion;
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/Handshake$Companion {
	public final fun -deprecated_get (Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
	public final fun get (Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;
	public final fun get (Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;
}

public final class okhttp3/Headers : java/lang/Iterable, kotlin/jvm/internal/markers/KMappedMarker {
	public static final field Companion Lokhttp3/Headers$Companion;
	public final fun -deprecated_size ()I
	public synthetic fun <init> ([Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun byteCount ()J
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Ljava/lang/String;)Ljava/lang/String;
	public final fun getDate (Ljava/lang/String;)Ljava/util/Date;
	public final fun getInstant (Ljava/lang/String;)Ljava/time/Instant;
	public fun hashCode ()I
	public fun iterator ()Ljava/util/Iterator;
	public final fun name (I)Ljava/lang/String;
	public final fun names ()Ljava/util/Set;
	public final fun newBuilder ()Lokhttp3/Headers$Builder;
	public static final fun of (Ljava/util/Map;)Lokhttp3/Headers;
	public static final fun of ([Ljava/lang/String;)Lokhttp3/Headers;
	public final fun size ()I
	public final fun toMultimap ()Ljava/util/Map;
	public fun toString ()Ljava/lang/String;
	public final fun value (I)Ljava/lang/String;
	public final fun values (Ljava/lang/String;)Ljava/util/List;
}

public final class okhttp3/Headers$Builder {
	public fun <init> ()V
	public final fun add (Ljava/lang/String;)Lokhttp3/Headers$Builder;
	public final fun add (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
	public final fun add (Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;
	public final fun add (Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;
	public final fun addAll (Lokhttp3/Headers;)Lokhttp3/Headers$Builder;
	public final fun addUnsafeNonAscii (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
	public final fun build ()Lokhttp3/Headers;
	public final fun get (Ljava/lang/String;)Ljava/lang/String;
	public final fun removeAll (Ljava/lang/String;)Lokhttp3/Headers$Builder;
	public final fun set (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;
	public final fun set (Ljava/lang/String;Ljava/time/Instant;)Lokhttp3/Headers$Builder;
	public final fun set (Ljava/lang/String;Ljava/util/Date;)Lokhttp3/Headers$Builder;
}

public final class okhttp3/Headers$Companion {
	public final fun -deprecated_of (Ljava/util/Map;)Lokhttp3/Headers;
	public final fun -deprecated_of ([Ljava/lang/String;)Lokhttp3/Headers;
	public final fun of (Ljava/util/Map;)Lokhttp3/Headers;
	public final fun of ([Ljava/lang/String;)Lokhttp3/Headers;
}

public final class okhttp3/HttpUrl {
	public static final field Companion Lokhttp3/HttpUrl$Companion;
	public final fun -deprecated_encodedFragment ()Ljava/lang/String;
	public final fun -deprecated_encodedPassword ()Ljava/lang/String;
	public final fun -deprecated_encodedPath ()Ljava/lang/String;
	public final fun -deprecated_encodedPathSegments ()Ljava/util/List;
	public final fun -deprecated_encodedQuery ()Ljava/lang/String;
	public final fun -deprecated_encodedUsername ()Ljava/lang/String;
	public final fun -deprecated_fragment ()Ljava/lang/String;
	public final fun -deprecated_host ()Ljava/lang/String;
	public final fun -deprecated_password ()Ljava/lang/String;
	public final fun -deprecated_pathSegments ()Ljava/util/List;
	public final fun -deprecated_pathSize ()I
	public final fun -deprecated_port ()I
	public final fun -deprecated_query ()Ljava/lang/String;
	public final fun -deprecated_queryParameterNames ()Ljava/util/Set;
	public final fun -deprecated_querySize ()I
	public final fun -deprecated_scheme ()Ljava/lang/String;
	public final fun -deprecated_uri ()Ljava/net/URI;
	public final fun -deprecated_url ()Ljava/net/URL;
	public final fun -deprecated_username ()Ljava/lang/String;
	public static final fun defaultPort (Ljava/lang/String;)I
	public final fun encodedFragment ()Ljava/lang/String;
	public final fun encodedPassword ()Ljava/lang/String;
	public final fun encodedPath ()Ljava/lang/String;
	public final fun encodedPathSegments ()Ljava/util/List;
	public final fun encodedQuery ()Ljava/lang/String;
	public final fun encodedUsername ()Ljava/lang/String;
	public fun equals (Ljava/lang/Object;)Z
	public final fun fragment ()Ljava/lang/String;
	public static final fun get (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public static final fun get (Ljava/net/URI;)Lokhttp3/HttpUrl;
	public static final fun get (Ljava/net/URL;)Lokhttp3/HttpUrl;
	public fun hashCode ()I
	public final fun host ()Ljava/lang/String;
	public final fun isHttps ()Z
	public final fun newBuilder ()Lokhttp3/HttpUrl$Builder;
	public final fun newBuilder (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public static final fun parse (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun password ()Ljava/lang/String;
	public final fun pathSegments ()Ljava/util/List;
	public final fun pathSize ()I
	public final fun port ()I
	public final fun query ()Ljava/lang/String;
	public final fun queryParameter (Ljava/lang/String;)Ljava/lang/String;
	public final fun queryParameterName (I)Ljava/lang/String;
	public final fun queryParameterNames ()Ljava/util/Set;
	public final fun queryParameterValue (I)Ljava/lang/String;
	public final fun queryParameterValues (Ljava/lang/String;)Ljava/util/List;
	public final fun querySize ()I
	public final fun redact ()Ljava/lang/String;
	public final fun resolve (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun scheme ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun topPrivateDomain ()Ljava/lang/String;
	public final fun uri ()Ljava/net/URI;
	public final fun url ()Ljava/net/URL;
	public final fun username ()Ljava/lang/String;
}

public final class okhttp3/HttpUrl$Builder {
	public static final field Companion Lokhttp3/HttpUrl$Builder$Companion;
	public fun <init> ()V
	public final fun addEncodedPathSegment (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun addEncodedPathSegments (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun addEncodedQueryParameter (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun addPathSegment (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun addPathSegments (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun addQueryParameter (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun build ()Lokhttp3/HttpUrl;
	public final fun encodedFragment (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun encodedPassword (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun encodedPath (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun encodedQuery (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun encodedUsername (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun fragment (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun host (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun password (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun port (I)Lokhttp3/HttpUrl$Builder;
	public final fun query (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun removeAllEncodedQueryParameters (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun removeAllQueryParameters (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun removePathSegment (I)Lokhttp3/HttpUrl$Builder;
	public final fun scheme (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun setEncodedPathSegment (ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun setEncodedQueryParameter (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun setPathSegment (ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public final fun setQueryParameter (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
	public fun toString ()Ljava/lang/String;
	public final fun username (Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;
}

public final class okhttp3/HttpUrl$Builder$Companion {
}

public final class okhttp3/HttpUrl$Companion {
	public final fun -deprecated_get (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun -deprecated_get (Ljava/net/URI;)Lokhttp3/HttpUrl;
	public final fun -deprecated_get (Ljava/net/URL;)Lokhttp3/HttpUrl;
	public final fun -deprecated_parse (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun defaultPort (Ljava/lang/String;)I
	public final fun get (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun get (Ljava/net/URI;)Lokhttp3/HttpUrl;
	public final fun get (Ljava/net/URL;)Lokhttp3/HttpUrl;
	public final fun parse (Ljava/lang/String;)Lokhttp3/HttpUrl;
}

public abstract interface class okhttp3/Interceptor {
	public static final field Companion Lokhttp3/Interceptor$Companion;
	public abstract fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public abstract interface class okhttp3/Interceptor$Chain {
	public abstract fun call ()Lokhttp3/Call;
	public abstract fun connectTimeoutMillis ()I
	public abstract fun connection ()Lokhttp3/Connection;
	public abstract fun proceed (Lokhttp3/Request;)Lokhttp3/Response;
	public abstract fun readTimeoutMillis ()I
	public abstract fun request ()Lokhttp3/Request;
	public abstract fun withConnectTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public abstract fun withReadTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public abstract fun withWriteTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public abstract fun writeTimeoutMillis ()I
}

public final class okhttp3/Interceptor$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lokhttp3/Interceptor;
}

public final class okhttp3/MediaType {
	public static final field Companion Lokhttp3/MediaType$Companion;
	public final fun -deprecated_subtype ()Ljava/lang/String;
	public final fun -deprecated_type ()Ljava/lang/String;
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun charset ()Ljava/nio/charset/Charset;
	public final fun charset (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;
	public static synthetic fun charset$default (Lokhttp3/MediaType;Ljava/nio/charset/Charset;ILjava/lang/Object;)Ljava/nio/charset/Charset;
	public fun equals (Ljava/lang/Object;)Z
	public static final fun get (Ljava/lang/String;)Lokhttp3/MediaType;
	public fun hashCode ()I
	public final fun parameter (Ljava/lang/String;)Ljava/lang/String;
	public static final fun parse (Ljava/lang/String;)Lokhttp3/MediaType;
	public final fun subtype ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun type ()Ljava/lang/String;
}

public final class okhttp3/MediaType$Companion {
	public final fun -deprecated_get (Ljava/lang/String;)Lokhttp3/MediaType;
	public final fun -deprecated_parse (Ljava/lang/String;)Lokhttp3/MediaType;
	public final fun get (Ljava/lang/String;)Lokhttp3/MediaType;
	public final fun parse (Ljava/lang/String;)Lokhttp3/MediaType;
}

public final class okhttp3/MultipartBody : okhttp3/RequestBody {
	public static final field ALTERNATIVE Lokhttp3/MediaType;
	public static final field Companion Lokhttp3/MultipartBody$Companion;
	public static final field DIGEST Lokhttp3/MediaType;
	public static final field FORM Lokhttp3/MediaType;
	public static final field MIXED Lokhttp3/MediaType;
	public static final field PARALLEL Lokhttp3/MediaType;
	public final fun -deprecated_boundary ()Ljava/lang/String;
	public final fun -deprecated_parts ()Ljava/util/List;
	public final fun -deprecated_size ()I
	public final fun -deprecated_type ()Lokhttp3/MediaType;
	public final fun boundary ()Ljava/lang/String;
	public fun contentLength ()J
	public fun contentType ()Lokhttp3/MediaType;
	public final fun part (I)Lokhttp3/MultipartBody$Part;
	public final fun parts ()Ljava/util/List;
	public final fun size ()I
	public final fun type ()Lokhttp3/MediaType;
	public fun writeTo (Lokio/BufferedSink;)V
}

public final class okhttp3/MultipartBody$Builder {
	public fun <init> ()V
	public fun <init> (Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun addFormDataPart (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;
	public final fun addFormDataPart (Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
	public final fun addPart (Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
	public final fun addPart (Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;
	public final fun addPart (Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;
	public final fun build ()Lokhttp3/MultipartBody;
	public final fun setType (Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;
}

public final class okhttp3/MultipartBody$Companion {
}

public final class okhttp3/MultipartBody$Part {
	public static final field Companion Lokhttp3/MultipartBody$Part$Companion;
	public final fun -deprecated_body ()Lokhttp3/RequestBody;
	public final fun -deprecated_headers ()Lokhttp3/Headers;
	public synthetic fun <init> (Lokhttp3/Headers;Lokhttp3/RequestBody;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun body ()Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
	public static final fun create (Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
	public static final fun createFormData (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;
	public static final fun createFormData (Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
	public final fun headers ()Lokhttp3/Headers;
}

public final class okhttp3/MultipartBody$Part$Companion {
	public final fun create (Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
	public final fun create (Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
	public final fun createFormData (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;
	public final fun createFormData (Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;
}

public final class okhttp3/MultipartReader : java/io/Closeable {
	public fun <init> (Lokhttp3/ResponseBody;)V
	public fun <init> (Lokio/BufferedSource;Ljava/lang/String;)V
	public final fun boundary ()Ljava/lang/String;
	public fun close ()V
	public final fun nextPart ()Lokhttp3/MultipartReader$Part;
}

public final class okhttp3/MultipartReader$Part : java/io/Closeable {
	public fun <init> (Lokhttp3/Headers;Lokio/BufferedSource;)V
	public final fun body ()Lokio/BufferedSource;
	public fun close ()V
	public final fun headers ()Lokhttp3/Headers;
}

public final class okhttp3/OkHttp {
	public static final field INSTANCE Lokhttp3/OkHttp;
	public static final field VERSION Ljava/lang/String;
}

public class okhttp3/OkHttpClient : java/lang/Cloneable, okhttp3/Call$Factory, okhttp3/WebSocket$Factory {
	public static final field Companion Lokhttp3/OkHttpClient$Companion;
	public final fun -deprecated_authenticator ()Lokhttp3/Authenticator;
	public final fun -deprecated_cache ()Lokhttp3/Cache;
	public final fun -deprecated_callTimeoutMillis ()I
	public final fun -deprecated_certificatePinner ()Lokhttp3/CertificatePinner;
	public final fun -deprecated_connectTimeoutMillis ()I
	public final fun -deprecated_connectionPool ()Lokhttp3/ConnectionPool;
	public final fun -deprecated_connectionSpecs ()Ljava/util/List;
	public final fun -deprecated_cookieJar ()Lokhttp3/CookieJar;
	public final fun -deprecated_dispatcher ()Lokhttp3/Dispatcher;
	public final fun -deprecated_dns ()Lokhttp3/Dns;
	public final fun -deprecated_eventListenerFactory ()Lokhttp3/EventListener$Factory;
	public final fun -deprecated_followRedirects ()Z
	public final fun -deprecated_followSslRedirects ()Z
	public final fun -deprecated_hostnameVerifier ()Ljavax/net/ssl/HostnameVerifier;
	public final fun -deprecated_interceptors ()Ljava/util/List;
	public final fun -deprecated_networkInterceptors ()Ljava/util/List;
	public final fun -deprecated_pingIntervalMillis ()I
	public final fun -deprecated_protocols ()Ljava/util/List;
	public final fun -deprecated_proxy ()Ljava/net/Proxy;
	public final fun -deprecated_proxyAuthenticator ()Lokhttp3/Authenticator;
	public final fun -deprecated_proxySelector ()Ljava/net/ProxySelector;
	public final fun -deprecated_readTimeoutMillis ()I
	public final fun -deprecated_retryOnConnectionFailure ()Z
	public final fun -deprecated_socketFactory ()Ljavax/net/SocketFactory;
	public final fun -deprecated_sslSocketFactory ()Ljavax/net/ssl/SSLSocketFactory;
	public final fun -deprecated_writeTimeoutMillis ()I
	public fun <init> ()V
	public final fun authenticator ()Lokhttp3/Authenticator;
	public final fun cache ()Lokhttp3/Cache;
	public final fun callTimeoutMillis ()I
	public final fun certificateChainCleaner ()Lokhttp3/internal/tls/CertificateChainCleaner;
	public final fun certificatePinner ()Lokhttp3/CertificatePinner;
	public fun clone ()Ljava/lang/Object;
	public final fun connectTimeoutMillis ()I
	public final fun connectionPool ()Lokhttp3/ConnectionPool;
	public final fun connectionSpecs ()Ljava/util/List;
	public final fun cookieJar ()Lokhttp3/CookieJar;
	public final fun dispatcher ()Lokhttp3/Dispatcher;
	public final fun dns ()Lokhttp3/Dns;
	public final fun eventListenerFactory ()Lokhttp3/EventListener$Factory;
	public final fun followRedirects ()Z
	public final fun followSslRedirects ()Z
	public final fun getRouteDatabase ()Lokhttp3/internal/connection/RouteDatabase;
	public final fun hostnameVerifier ()Ljavax/net/ssl/HostnameVerifier;
	public final fun interceptors ()Ljava/util/List;
	public final fun minWebSocketMessageToCompress ()J
	public final fun networkInterceptors ()Ljava/util/List;
	public fun newBuilder ()Lokhttp3/OkHttpClient$Builder;
	public fun newCall (Lokhttp3/Request;)Lokhttp3/Call;
	public fun newWebSocket (Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;
	public final fun pingIntervalMillis ()I
	public final fun protocols ()Ljava/util/List;
	public final fun proxy ()Ljava/net/Proxy;
	public final fun proxyAuthenticator ()Lokhttp3/Authenticator;
	public final fun proxySelector ()Ljava/net/ProxySelector;
	public final fun readTimeoutMillis ()I
	public final fun retryOnConnectionFailure ()Z
	public final fun socketFactory ()Ljavax/net/SocketFactory;
	public final fun sslSocketFactory ()Ljavax/net/ssl/SSLSocketFactory;
	public final fun writeTimeoutMillis ()I
	public final fun x509TrustManager ()Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/OkHttpClient$Builder {
	public final fun -addInterceptor (Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
	public final fun -addNetworkInterceptor (Lkotlin/jvm/functions/Function1;)Lokhttp3/OkHttpClient$Builder;
	public fun <init> ()V
	public final fun addInterceptor (Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
	public final fun addNetworkInterceptor (Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;
	public final fun authenticator (Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;
	public final fun build ()Lokhttp3/OkHttpClient;
	public final fun cache (Lokhttp3/Cache;)Lokhttp3/OkHttpClient$Builder;
	public final fun callTimeout (JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
	public final fun callTimeout (Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
	public final fun certificatePinner (Lokhttp3/CertificatePinner;)Lokhttp3/OkHttpClient$Builder;
	public final fun connectTimeout (JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
	public final fun connectTimeout (Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
	public final fun connectionPool (Lokhttp3/ConnectionPool;)Lokhttp3/OkHttpClient$Builder;
	public final fun connectionSpecs (Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;
	public final fun cookieJar (Lokhttp3/CookieJar;)Lokhttp3/OkHttpClient$Builder;
	public final fun dispatcher (Lokhttp3/Dispatcher;)Lokhttp3/OkHttpClient$Builder;
	public final fun dns (Lokhttp3/Dns;)Lokhttp3/OkHttpClient$Builder;
	public final fun eventListener (Lokhttp3/EventListener;)Lokhttp3/OkHttpClient$Builder;
	public final fun eventListenerFactory (Lokhttp3/EventListener$Factory;)Lokhttp3/OkHttpClient$Builder;
	public final fun followRedirects (Z)Lokhttp3/OkHttpClient$Builder;
	public final fun followSslRedirects (Z)Lokhttp3/OkHttpClient$Builder;
	public final fun hostnameVerifier (Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/OkHttpClient$Builder;
	public final fun interceptors ()Ljava/util/List;
	public final fun minWebSocketMessageToCompress (J)Lokhttp3/OkHttpClient$Builder;
	public final fun networkInterceptors ()Ljava/util/List;
	public final fun pingInterval (JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
	public final fun pingInterval (Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
	public final fun protocols (Ljava/util/List;)Lokhttp3/OkHttpClient$Builder;
	public final fun proxy (Ljava/net/Proxy;)Lokhttp3/OkHttpClient$Builder;
	public final fun proxyAuthenticator (Lokhttp3/Authenticator;)Lokhttp3/OkHttpClient$Builder;
	public final fun proxySelector (Ljava/net/ProxySelector;)Lokhttp3/OkHttpClient$Builder;
	public final fun readTimeout (JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
	public final fun readTimeout (Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
	public final fun retryOnConnectionFailure (Z)Lokhttp3/OkHttpClient$Builder;
	public final fun socketFactory (Ljavax/net/SocketFactory;)Lokhttp3/OkHttpClient$Builder;
	public final fun sslSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/OkHttpClient$Builder;
	public final fun sslSocketFactory (Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/OkHttpClient$Builder;
	public final fun writeTimeout (JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;
	public final fun writeTimeout (Ljava/time/Duration;)Lokhttp3/OkHttpClient$Builder;
}

public final class okhttp3/OkHttpClient$Companion {
}

public final class okhttp3/Protocol : java/lang/Enum {
	public static final field Companion Lokhttp3/Protocol$Companion;
	public static final field H2_PRIOR_KNOWLEDGE Lokhttp3/Protocol;
	public static final field HTTP_1_0 Lokhttp3/Protocol;
	public static final field HTTP_1_1 Lokhttp3/Protocol;
	public static final field HTTP_2 Lokhttp3/Protocol;
	public static final field QUIC Lokhttp3/Protocol;
	public static final field SPDY_3 Lokhttp3/Protocol;
	public static final fun get (Ljava/lang/String;)Lokhttp3/Protocol;
	public fun toString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lokhttp3/Protocol;
	public static fun values ()[Lokhttp3/Protocol;
}

public final class okhttp3/Protocol$Companion {
	public final fun get (Ljava/lang/String;)Lokhttp3/Protocol;
}

public final class okhttp3/Request {
	public final fun -deprecated_body ()Lokhttp3/RequestBody;
	public final fun -deprecated_cacheControl ()Lokhttp3/CacheControl;
	public final fun -deprecated_headers ()Lokhttp3/Headers;
	public final fun -deprecated_method ()Ljava/lang/String;
	public final fun -deprecated_url ()Lokhttp3/HttpUrl;
	public final fun body ()Lokhttp3/RequestBody;
	public final fun cacheControl ()Lokhttp3/CacheControl;
	public final fun header (Ljava/lang/String;)Ljava/lang/String;
	public final fun headers ()Lokhttp3/Headers;
	public final fun headers (Ljava/lang/String;)Ljava/util/List;
	public final fun isHttps ()Z
	public final fun method ()Ljava/lang/String;
	public final fun newBuilder ()Lokhttp3/Request$Builder;
	public final fun tag ()Ljava/lang/Object;
	public final fun tag (Ljava/lang/Class;)Ljava/lang/Object;
	public fun toString ()Ljava/lang/String;
	public final fun url ()Lokhttp3/HttpUrl;
}

public class okhttp3/Request$Builder {
	public fun <init> ()V
	public fun addHeader (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
	public fun build ()Lokhttp3/Request;
	public fun cacheControl (Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;
	public final fun delete ()Lokhttp3/Request$Builder;
	public fun delete (Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
	public static synthetic fun delete$default (Lokhttp3/Request$Builder;Lokhttp3/RequestBody;ILjava/lang/Object;)Lokhttp3/Request$Builder;
	public fun get ()Lokhttp3/Request$Builder;
	public fun head ()Lokhttp3/Request$Builder;
	public fun header (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;
	public fun headers (Lokhttp3/Headers;)Lokhttp3/Request$Builder;
	public fun method (Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
	public fun patch (Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
	public fun post (Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
	public fun put (Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;
	public fun removeHeader (Ljava/lang/String;)Lokhttp3/Request$Builder;
	public fun tag (Ljava/lang/Class;Ljava/lang/Object;)Lokhttp3/Request$Builder;
	public fun tag (Ljava/lang/Object;)Lokhttp3/Request$Builder;
	public fun url (Ljava/lang/String;)Lokhttp3/Request$Builder;
	public fun url (Ljava/net/URL;)Lokhttp3/Request$Builder;
	public fun url (Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;
}

public abstract class okhttp3/RequestBody {
	public static final field Companion Lokhttp3/RequestBody$Companion;
	public fun <init> ()V
	public fun contentLength ()J
	public abstract fun contentType ()Lokhttp3/MediaType;
	public static final fun create (Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public static final fun create (Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;
	public static final fun create (Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;
	public static final fun create (Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public static final fun create ([B)Lokhttp3/RequestBody;
	public static final fun create ([BLokhttp3/MediaType;)Lokhttp3/RequestBody;
	public static final fun create ([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;
	public static final fun create ([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;
	public fun isDuplex ()Z
	public fun isOneShot ()Z
	public abstract fun writeTo (Lokio/BufferedSink;)V
}

public final class okhttp3/RequestBody$Companion {
	public final fun create (Ljava/io/File;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public final fun create (Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;Ljava/io/File;)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;[BI)Lokhttp3/RequestBody;
	public final fun create (Lokhttp3/MediaType;[BII)Lokhttp3/RequestBody;
	public final fun create (Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/RequestBody;
	public final fun create ([B)Lokhttp3/RequestBody;
	public final fun create ([BLokhttp3/MediaType;)Lokhttp3/RequestBody;
	public final fun create ([BLokhttp3/MediaType;I)Lokhttp3/RequestBody;
	public final fun create ([BLokhttp3/MediaType;II)Lokhttp3/RequestBody;
	public static synthetic fun create$default (Lokhttp3/RequestBody$Companion;Ljava/io/File;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
	public static synthetic fun create$default (Lokhttp3/RequestBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
	public static synthetic fun create$default (Lokhttp3/RequestBody$Companion;Lokhttp3/MediaType;[BIIILjava/lang/Object;)Lokhttp3/RequestBody;
	public static synthetic fun create$default (Lokhttp3/RequestBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/RequestBody;
	public static synthetic fun create$default (Lokhttp3/RequestBody$Companion;[BLokhttp3/MediaType;IIILjava/lang/Object;)Lokhttp3/RequestBody;
}

public final class okhttp3/Response : java/io/Closeable {
	public final fun -deprecated_body ()Lokhttp3/ResponseBody;
	public final fun -deprecated_cacheControl ()Lokhttp3/CacheControl;
	public final fun -deprecated_cacheResponse ()Lokhttp3/Response;
	public final fun -deprecated_code ()I
	public final fun -deprecated_handshake ()Lokhttp3/Handshake;
	public final fun -deprecated_headers ()Lokhttp3/Headers;
	public final fun -deprecated_message ()Ljava/lang/String;
	public final fun -deprecated_networkResponse ()Lokhttp3/Response;
	public final fun -deprecated_priorResponse ()Lokhttp3/Response;
	public final fun -deprecated_protocol ()Lokhttp3/Protocol;
	public final fun -deprecated_receivedResponseAtMillis ()J
	public final fun -deprecated_request ()Lokhttp3/Request;
	public final fun -deprecated_sentRequestAtMillis ()J
	public final fun body ()Lokhttp3/ResponseBody;
	public final fun cacheControl ()Lokhttp3/CacheControl;
	public final fun cacheResponse ()Lokhttp3/Response;
	public final fun challenges ()Ljava/util/List;
	public fun close ()V
	public final fun code ()I
	public final fun handshake ()Lokhttp3/Handshake;
	public final fun header (Ljava/lang/String;)Ljava/lang/String;
	public final fun header (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun header$default (Lokhttp3/Response;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
	public final fun headers ()Lokhttp3/Headers;
	public final fun headers (Ljava/lang/String;)Ljava/util/List;
	public final fun isRedirect ()Z
	public final fun isSuccessful ()Z
	public final fun message ()Ljava/lang/String;
	public final fun networkResponse ()Lokhttp3/Response;
	public final fun newBuilder ()Lokhttp3/Response$Builder;
	public final fun peekBody (J)Lokhttp3/ResponseBody;
	public final fun priorResponse ()Lokhttp3/Response;
	public final fun protocol ()Lokhttp3/Protocol;
	public final fun receivedResponseAtMillis ()J
	public final fun request ()Lokhttp3/Request;
	public final fun sentRequestAtMillis ()J
	public fun toString ()Ljava/lang/String;
	public final fun trailers ()Lokhttp3/Headers;
}

public class okhttp3/Response$Builder {
	public fun <init> ()V
	public fun addHeader (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;
	public fun body (Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;
	public fun build ()Lokhttp3/Response;
	public fun cacheResponse (Lokhttp3/Response;)Lokhttp3/Response$Builder;
	public fun code (I)Lokhttp3/Response$Builder;
	public fun handshake (Lokhttp3/Handshake;)Lokhttp3/Response$Builder;
	public fun header (Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;
	public fun headers (Lokhttp3/Headers;)Lokhttp3/Response$Builder;
	public fun message (Ljava/lang/String;)Lokhttp3/Response$Builder;
	public fun networkResponse (Lokhttp3/Response;)Lokhttp3/Response$Builder;
	public fun priorResponse (Lokhttp3/Response;)Lokhttp3/Response$Builder;
	public fun protocol (Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
	public fun receivedResponseAtMillis (J)Lokhttp3/Response$Builder;
	public fun removeHeader (Ljava/lang/String;)Lokhttp3/Response$Builder;
	public fun request (Lokhttp3/Request;)Lokhttp3/Response$Builder;
	public fun sentRequestAtMillis (J)Lokhttp3/Response$Builder;
}

public abstract class okhttp3/ResponseBody : java/io/Closeable {
	public static final field Companion Lokhttp3/ResponseBody$Companion;
	public fun <init> ()V
	public final fun byteStream ()Ljava/io/InputStream;
	public final fun byteString ()Lokio/ByteString;
	public final fun bytes ()[B
	public final fun charStream ()Ljava/io/Reader;
	public fun close ()V
	public abstract fun contentLength ()J
	public abstract fun contentType ()Lokhttp3/MediaType;
	public static final fun create (Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public static final fun create (Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;
	public static final fun create (Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;
	public static final fun create (Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;
	public static final fun create (Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;
	public static final fun create (Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;
	public static final fun create (Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public static final fun create ([BLokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public abstract fun source ()Lokio/BufferedSource;
	public final fun string ()Ljava/lang/String;
}

public final class okhttp3/ResponseBody$Companion {
	public final fun create (Ljava/lang/String;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public final fun create (Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;
	public final fun create (Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;
	public final fun create (Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;
	public final fun create (Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;
	public final fun create (Lokio/BufferedSource;Lokhttp3/MediaType;J)Lokhttp3/ResponseBody;
	public final fun create (Lokio/ByteString;Lokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public final fun create ([BLokhttp3/MediaType;)Lokhttp3/ResponseBody;
	public static synthetic fun create$default (Lokhttp3/ResponseBody$Companion;Ljava/lang/String;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
	public static synthetic fun create$default (Lokhttp3/ResponseBody$Companion;Lokio/BufferedSource;Lokhttp3/MediaType;JILjava/lang/Object;)Lokhttp3/ResponseBody;
	public static synthetic fun create$default (Lokhttp3/ResponseBody$Companion;Lokio/ByteString;Lokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
	public static synthetic fun create$default (Lokhttp3/ResponseBody$Companion;[BLokhttp3/MediaType;ILjava/lang/Object;)Lokhttp3/ResponseBody;
}

public final class okhttp3/Route {
	public final fun -deprecated_address ()Lokhttp3/Address;
	public final fun -deprecated_proxy ()Ljava/net/Proxy;
	public final fun -deprecated_socketAddress ()Ljava/net/InetSocketAddress;
	public fun <init> (Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V
	public final fun address ()Lokhttp3/Address;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun proxy ()Ljava/net/Proxy;
	public final fun requiresTunnel ()Z
	public final fun socketAddress ()Ljava/net/InetSocketAddress;
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/TlsVersion : java/lang/Enum {
	public static final field Companion Lokhttp3/TlsVersion$Companion;
	public static final field SSL_3_0 Lokhttp3/TlsVersion;
	public static final field TLS_1_0 Lokhttp3/TlsVersion;
	public static final field TLS_1_1 Lokhttp3/TlsVersion;
	public static final field TLS_1_2 Lokhttp3/TlsVersion;
	public static final field TLS_1_3 Lokhttp3/TlsVersion;
	public final fun -deprecated_javaName ()Ljava/lang/String;
	public static final fun forJavaName (Ljava/lang/String;)Lokhttp3/TlsVersion;
	public final fun javaName ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lokhttp3/TlsVersion;
	public static fun values ()[Lokhttp3/TlsVersion;
}

public final class okhttp3/TlsVersion$Companion {
	public final fun forJavaName (Ljava/lang/String;)Lokhttp3/TlsVersion;
}

public abstract interface class okhttp3/WebSocket {
	public abstract fun cancel ()V
	public abstract fun close (ILjava/lang/String;)Z
	public abstract fun queueSize ()J
	public abstract fun request ()Lokhttp3/Request;
	public abstract fun send (Ljava/lang/String;)Z
	public abstract fun send (Lokio/ByteString;)Z
}

public abstract interface class okhttp3/WebSocket$Factory {
	public abstract fun newWebSocket (Lokhttp3/Request;Lokhttp3/WebSocketListener;)Lokhttp3/WebSocket;
}

public abstract class okhttp3/WebSocketListener {
	public fun <init> ()V
	public fun onClosed (Lokhttp3/WebSocket;ILjava/lang/String;)V
	public fun onClosing (Lokhttp3/WebSocket;ILjava/lang/String;)V
	public fun onFailure (Lokhttp3/WebSocket;Ljava/lang/Throwable;Lokhttp3/Response;)V
	public fun onMessage (Lokhttp3/WebSocket;Ljava/lang/String;)V
	public fun onMessage (Lokhttp3/WebSocket;Lokio/ByteString;)V
	public fun onOpen (Lokhttp3/WebSocket;Lokhttp3/Response;)V
}

public abstract interface annotation class okhttp3/internal/SuppressSignatureCheck : java/lang/annotation/Annotation {
}

public final class okhttp3/internal/Util {
	public static final field userAgent Ljava/lang/String;
}

public final class okhttp3/internal/authenticator/JavaNetAuthenticator : okhttp3/Authenticator {
	public fun <init> ()V
	public fun <init> (Lokhttp3/Dns;)V
	public synthetic fun <init> (Lokhttp3/Dns;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun authenticate (Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;
}

public final class okhttp3/internal/cache/CacheInterceptor : okhttp3/Interceptor {
	public static final field Companion Lokhttp3/internal/cache/CacheInterceptor$Companion;
	public fun <init> (Lokhttp3/Cache;)V
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public final class okhttp3/internal/cache/CacheInterceptor$Companion {
}

public abstract interface class okhttp3/internal/cache/CacheRequest {
	public abstract fun abort ()V
	public abstract fun body ()Lokio/Sink;
}

public final class okhttp3/internal/cache/CacheStrategy {
	public static final field Companion Lokhttp3/internal/cache/CacheStrategy$Companion;
	public final fun getCacheResponse ()Lokhttp3/Response;
	public final fun getNetworkRequest ()Lokhttp3/Request;
}

public final class okhttp3/internal/cache/CacheStrategy$Companion {
	public final fun isCacheable (Lokhttp3/Response;Lokhttp3/Request;)Z
}

public final class okhttp3/internal/cache/CacheStrategy$Factory {
	public fun <init> (JLokhttp3/Request;Lokhttp3/Response;)V
	public final fun compute ()Lokhttp3/internal/cache/CacheStrategy;
}

public final class okhttp3/internal/cache/DiskLruCache : java/io/Closeable, java/io/Flushable {
	public static final field ANY_SEQUENCE_NUMBER J
	public static final field CLEAN Ljava/lang/String;
	public static final field Companion Lokhttp3/internal/cache/DiskLruCache$Companion;
	public static final field DIRTY Ljava/lang/String;
	public static final field JOURNAL_FILE Ljava/lang/String;
	public static final field JOURNAL_FILE_BACKUP Ljava/lang/String;
	public static final field JOURNAL_FILE_TEMP Ljava/lang/String;
	public static final field LEGAL_KEY_PATTERN Lkotlin/text/Regex;
	public static final field MAGIC Ljava/lang/String;
	public static final field READ Ljava/lang/String;
	public static final field REMOVE Ljava/lang/String;
	public static final field VERSION_1 Ljava/lang/String;
	public fun close ()V
	public final fun delete ()V
	public final fun edit (Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Editor;
	public final fun edit (Ljava/lang/String;J)Lokhttp3/internal/cache/DiskLruCache$Editor;
	public static synthetic fun edit$default (Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;JILjava/lang/Object;)Lokhttp3/internal/cache/DiskLruCache$Editor;
	public final fun evictAll ()V
	public fun flush ()V
	public final fun get (Ljava/lang/String;)Lokhttp3/internal/cache/DiskLruCache$Snapshot;
	public final fun getDirectory ()Ljava/io/File;
	public final fun getMaxSize ()J
	public final fun initialize ()V
	public final fun isClosed ()Z
	public final fun remove (Ljava/lang/String;)Z
	public final fun setMaxSize (J)V
	public final fun size ()J
	public final fun snapshots ()Ljava/util/Iterator;
	public final fun trimToSize ()V
}

public final class okhttp3/internal/cache/DiskLruCache$Companion {
}

public final class okhttp3/internal/cache/DiskLruCache$Editor {
	public final fun abort ()V
	public final fun commit ()V
	public final fun newSink (I)Lokio/Sink;
	public final fun newSource (I)Lokio/Source;
}

public final class okhttp3/internal/cache/DiskLruCache$Snapshot : java/io/Closeable {
	public fun close ()V
	public final fun edit ()Lokhttp3/internal/cache/DiskLruCache$Editor;
	public final fun getLength (I)J
	public final fun getSource (I)Lokio/Source;
	public final fun key ()Ljava/lang/String;
}

public final class okhttp3/internal/cache2/Relay {
	public static final field Companion Lokhttp3/internal/cache2/Relay$Companion;
	public static final field PREFIX_CLEAN Lokio/ByteString;
	public static final field PREFIX_DIRTY Lokio/ByteString;
	public synthetic fun <init> (Ljava/io/RandomAccessFile;Lokio/Source;JLokio/ByteString;JLkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun commit (J)V
	public final fun getBuffer ()Lokio/Buffer;
	public final fun getBufferMaxSize ()J
	public final fun getComplete ()Z
	public final fun getFile ()Ljava/io/RandomAccessFile;
	public final fun getSourceCount ()I
	public final fun getUpstream ()Lokio/Source;
	public final fun getUpstreamBuffer ()Lokio/Buffer;
	public final fun getUpstreamPos ()J
	public final fun getUpstreamReader ()Ljava/lang/Thread;
	public final fun isClosed ()Z
	public final fun metadata ()Lokio/ByteString;
	public final fun newSource ()Lokio/Source;
	public final fun setComplete (Z)V
	public final fun setFile (Ljava/io/RandomAccessFile;)V
	public final fun setSourceCount (I)V
	public final fun setUpstream (Lokio/Source;)V
	public final fun setUpstreamPos (J)V
	public final fun setUpstreamReader (Ljava/lang/Thread;)V
}

public final class okhttp3/internal/cache2/Relay$Companion {
	public final fun edit (Ljava/io/File;Lokio/Source;Lokio/ByteString;J)Lokhttp3/internal/cache2/Relay;
	public final fun read (Ljava/io/File;)Lokhttp3/internal/cache2/Relay;
}

public abstract class okhttp3/internal/concurrent/Task {
	public fun <init> (Ljava/lang/String;Z)V
	public synthetic fun <init> (Ljava/lang/String;ZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCancelable ()Z
	public final fun getName ()Ljava/lang/String;
	public abstract fun runOnce ()J
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/concurrent/TaskLoggerKt {
	public static final fun formatDuration (J)Ljava/lang/String;
}

public final class okhttp3/internal/concurrent/TaskQueue {
	public final fun cancelAll ()V
	public final fun execute (Ljava/lang/String;JZLkotlin/jvm/functions/Function0;)V
	public static synthetic fun execute$default (Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;JZLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public final fun getScheduledTasks ()Ljava/util/List;
	public final fun idleLatch ()Ljava/util/concurrent/CountDownLatch;
	public final fun schedule (Ljava/lang/String;JLkotlin/jvm/functions/Function0;)V
	public final fun schedule (Lokhttp3/internal/concurrent/Task;J)V
	public static synthetic fun schedule$default (Lokhttp3/internal/concurrent/TaskQueue;Ljava/lang/String;JLkotlin/jvm/functions/Function0;ILjava/lang/Object;)V
	public static synthetic fun schedule$default (Lokhttp3/internal/concurrent/TaskQueue;Lokhttp3/internal/concurrent/Task;JILjava/lang/Object;)V
	public final fun shutdown ()V
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/concurrent/TaskRunner {
	public static final field Companion Lokhttp3/internal/concurrent/TaskRunner$Companion;
	public static final field INSTANCE Lokhttp3/internal/concurrent/TaskRunner;
	public fun <init> (Lokhttp3/internal/concurrent/TaskRunner$Backend;)V
	public final fun activeQueues ()Ljava/util/List;
	public final fun awaitTaskToRun ()Lokhttp3/internal/concurrent/Task;
	public final fun cancelAll ()V
	public final fun getBackend ()Lokhttp3/internal/concurrent/TaskRunner$Backend;
	public final fun newQueue ()Lokhttp3/internal/concurrent/TaskQueue;
}

public abstract interface class okhttp3/internal/concurrent/TaskRunner$Backend {
	public abstract fun beforeTask (Lokhttp3/internal/concurrent/TaskRunner;)V
	public abstract fun coordinatorNotify (Lokhttp3/internal/concurrent/TaskRunner;)V
	public abstract fun coordinatorWait (Lokhttp3/internal/concurrent/TaskRunner;J)V
	public abstract fun execute (Ljava/lang/Runnable;)V
	public abstract fun nanoTime ()J
}

public final class okhttp3/internal/concurrent/TaskRunner$Companion {
	public final fun getLogger ()Ljava/util/logging/Logger;
}

public final class okhttp3/internal/concurrent/TaskRunner$RealBackend : okhttp3/internal/concurrent/TaskRunner$Backend {
	public fun <init> (Ljava/util/concurrent/ThreadFactory;)V
	public fun beforeTask (Lokhttp3/internal/concurrent/TaskRunner;)V
	public fun coordinatorNotify (Lokhttp3/internal/concurrent/TaskRunner;)V
	public fun coordinatorWait (Lokhttp3/internal/concurrent/TaskRunner;J)V
	public fun execute (Ljava/lang/Runnable;)V
	public fun nanoTime ()J
	public final fun shutdown ()V
}

public final class okhttp3/internal/connection/ConnectInterceptor : okhttp3/Interceptor {
	public static final field INSTANCE Lokhttp3/internal/connection/ConnectInterceptor;
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public final class okhttp3/internal/connection/Exchange {
	public fun <init> (Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;Lokhttp3/internal/connection/ExchangeFinder;Lokhttp3/internal/http/ExchangeCodec;)V
	public final fun bodyComplete (JZZLjava/io/IOException;)Ljava/io/IOException;
	public final fun cancel ()V
	public final fun createRequestBody (Lokhttp3/Request;Z)Lokio/Sink;
	public final fun detachWithViolence ()V
	public final fun finishRequest ()V
	public final fun flushRequest ()V
	public final fun newWebSocketStreams ()Lokhttp3/internal/ws/RealWebSocket$Streams;
	public final fun noNewExchangesOnConnection ()V
	public final fun noRequestBody ()V
	public final fun openResponseBody (Lokhttp3/Response;)Lokhttp3/ResponseBody;
	public final fun readResponseHeaders (Z)Lokhttp3/Response$Builder;
	public final fun responseHeadersEnd (Lokhttp3/Response;)V
	public final fun responseHeadersStart ()V
	public final fun trailers ()Lokhttp3/Headers;
	public final fun webSocketUpgradeFailed ()V
	public final fun writeRequestHeaders (Lokhttp3/Request;)V
}

public final class okhttp3/internal/connection/ExchangeFinder {
	public fun <init> (Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Lokhttp3/EventListener;)V
	public final fun find (Lokhttp3/OkHttpClient;Lokhttp3/internal/http/RealInterceptorChain;)Lokhttp3/internal/http/ExchangeCodec;
	public final fun retryAfterFailure ()Z
	public final fun sameHostAndPort (Lokhttp3/HttpUrl;)Z
	public final fun trackFailure (Ljava/io/IOException;)V
}

public final class okhttp3/internal/connection/RealCall : okhttp3/Call {
	public fun <init> (Lokhttp3/OkHttpClient;Lokhttp3/Request;Z)V
	public final fun acquireConnectionNoEvents (Lokhttp3/internal/connection/RealConnection;)V
	public fun cancel ()V
	public synthetic fun clone ()Ljava/lang/Object;
	public synthetic fun clone ()Lokhttp3/Call;
	public fun clone ()Lokhttp3/internal/connection/RealCall;
	public fun enqueue (Lokhttp3/Callback;)V
	public final fun enterNetworkInterceptorExchange (Lokhttp3/Request;Z)V
	public fun execute ()Lokhttp3/Response;
	public final fun getClient ()Lokhttp3/OkHttpClient;
	public final fun getConnection ()Lokhttp3/internal/connection/RealConnection;
	public final fun getConnectionToCancel ()Lokhttp3/internal/connection/RealConnection;
	public final fun getForWebSocket ()Z
	public final fun getOriginalRequest ()Lokhttp3/Request;
	public fun isCanceled ()Z
	public fun isExecuted ()Z
	public fun request ()Lokhttp3/Request;
	public final fun retryAfterFailure ()Z
	public final fun setConnectionToCancel (Lokhttp3/internal/connection/RealConnection;)V
	public fun timeout ()Lokio/AsyncTimeout;
	public synthetic fun timeout ()Lokio/Timeout;
	public final fun timeoutEarlyExit ()V
}

public final class okhttp3/internal/connection/RealConnection : okhttp3/internal/http2/Http2Connection$Listener, okhttp3/Connection {
	public static final field Companion Lokhttp3/internal/connection/RealConnection$Companion;
	public fun <init> (Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;)V
	public final fun cancel ()V
	public final fun connect (IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V
	public final fun getCalls ()Ljava/util/List;
	public final fun getConnectionPool ()Lokhttp3/internal/connection/RealConnectionPool;
	public final fun getNoNewExchanges ()Z
	public fun handshake ()Lokhttp3/Handshake;
	public final fun isHealthy (Z)Z
	public fun onSettings (Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V
	public fun onStream (Lokhttp3/internal/http2/Http2Stream;)V
	public fun protocol ()Lokhttp3/Protocol;
	public fun route ()Lokhttp3/Route;
	public final fun setNoNewExchanges (Z)V
	public fun socket ()Ljava/net/Socket;
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/connection/RealConnection$Companion {
	public final fun newTestConnection (Lokhttp3/internal/connection/RealConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;
}

public final class okhttp3/internal/connection/RealConnectionPool {
	public static final field Companion Lokhttp3/internal/connection/RealConnectionPool$Companion;
	public fun <init> (Lokhttp3/internal/concurrent/TaskRunner;IJLjava/util/concurrent/TimeUnit;)V
	public final fun callAcquirePooledConnection (Lokhttp3/Address;Lokhttp3/internal/connection/RealCall;Ljava/util/List;Z)Z
	public final fun cleanup (J)J
	public final fun connectionBecameIdle (Lokhttp3/internal/connection/RealConnection;)Z
	public final fun connectionCount ()I
	public final fun evictAll ()V
	public final fun idleConnectionCount ()I
	public final fun put (Lokhttp3/internal/connection/RealConnection;)V
}

public final class okhttp3/internal/connection/RealConnectionPool$Companion {
	public final fun get (Lokhttp3/ConnectionPool;)Lokhttp3/internal/connection/RealConnectionPool;
}

public final class okhttp3/internal/connection/RouteDatabase {
	public fun <init> ()V
	public final fun connected (Lokhttp3/Route;)V
	public final fun failed (Lokhttp3/Route;)V
	public final fun shouldPostpone (Lokhttp3/Route;)Z
}

public final class okhttp3/internal/connection/RouteException : java/lang/RuntimeException {
	public final fun addConnectException (Ljava/io/IOException;)V
	public final fun getFirstConnectException ()Ljava/io/IOException;
	public final fun getLastConnectException ()Ljava/io/IOException;
}

public final class okhttp3/internal/connection/RouteSelector {
	public static final field Companion Lokhttp3/internal/connection/RouteSelector$Companion;
	public fun <init> (Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V
	public final fun hasNext ()Z
	public final fun next ()Lokhttp3/internal/connection/RouteSelector$Selection;
}

public final class okhttp3/internal/connection/RouteSelector$Companion {
	public final fun getSocketHost (Ljava/net/InetSocketAddress;)Ljava/lang/String;
}

public final class okhttp3/internal/connection/RouteSelector$Selection {
	public fun <init> (Ljava/util/List;)V
	public final fun getRoutes ()Ljava/util/List;
	public final fun hasNext ()Z
	public final fun next ()Lokhttp3/Route;
}

public final class okhttp3/internal/http/BridgeInterceptor : okhttp3/Interceptor {
	public fun <init> (Lokhttp3/CookieJar;)V
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public final class okhttp3/internal/http/CallServerInterceptor : okhttp3/Interceptor {
	public fun <init> (Z)V
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public abstract interface class okhttp3/internal/http/ExchangeCodec {
	public static final field Companion Lokhttp3/internal/http/ExchangeCodec$Companion;
	public static final field DISCARD_STREAM_TIMEOUT_MILLIS I
	public abstract fun cancel ()V
	public abstract fun createRequestBody (Lokhttp3/Request;J)Lokio/Sink;
	public abstract fun finishRequest ()V
	public abstract fun flushRequest ()V
	public abstract fun getConnection ()Lokhttp3/internal/connection/RealConnection;
	public abstract fun openResponseBodySource (Lokhttp3/Response;)Lokio/Source;
	public abstract fun readResponseHeaders (Z)Lokhttp3/Response$Builder;
	public abstract fun reportedContentLength (Lokhttp3/Response;)J
	public abstract fun trailers ()Lokhttp3/Headers;
	public abstract fun writeRequestHeaders (Lokhttp3/Request;)V
}

public final class okhttp3/internal/http/ExchangeCodec$Companion {
	public static final field DISCARD_STREAM_TIMEOUT_MILLIS I
}

public final class okhttp3/internal/http/HttpHeaders {
	public static final fun hasBody (Lokhttp3/Response;)Z
	public static final fun parseChallenges (Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;
	public static final fun promisesBody (Lokhttp3/Response;)Z
	public static final fun receiveHeaders (Lokhttp3/CookieJar;Lokhttp3/HttpUrl;Lokhttp3/Headers;)V
}

public final class okhttp3/internal/http/HttpMethod {
	public static final field INSTANCE Lokhttp3/internal/http/HttpMethod;
	public final fun invalidatesCache (Ljava/lang/String;)Z
	public static final fun permitsRequestBody (Ljava/lang/String;)Z
	public final fun redirectsToGet (Ljava/lang/String;)Z
	public final fun redirectsWithBody (Ljava/lang/String;)Z
	public static final fun requiresRequestBody (Ljava/lang/String;)Z
}

public final class okhttp3/internal/http/RealInterceptorChain : okhttp3/Interceptor$Chain {
	public fun <init> (Lokhttp3/internal/connection/RealCall;Ljava/util/List;ILokhttp3/internal/connection/Exchange;Lokhttp3/Request;III)V
	public fun call ()Lokhttp3/Call;
	public fun connectTimeoutMillis ()I
	public fun connection ()Lokhttp3/Connection;
	public fun proceed (Lokhttp3/Request;)Lokhttp3/Response;
	public fun readTimeoutMillis ()I
	public fun request ()Lokhttp3/Request;
	public fun withConnectTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public fun withReadTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public fun withWriteTimeout (ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;
	public fun writeTimeoutMillis ()I
}

public final class okhttp3/internal/http/RealResponseBody : okhttp3/ResponseBody {
	public fun <init> (Ljava/lang/String;JLokio/BufferedSource;)V
	public fun contentLength ()J
	public fun contentType ()Lokhttp3/MediaType;
	public fun source ()Lokio/BufferedSource;
}

public final class okhttp3/internal/http/RequestLine {
	public static final field INSTANCE Lokhttp3/internal/http/RequestLine;
	public final fun get (Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;
	public final fun requestPath (Lokhttp3/HttpUrl;)Ljava/lang/String;
}

public final class okhttp3/internal/http/RetryAndFollowUpInterceptor : okhttp3/Interceptor {
	public static final field Companion Lokhttp3/internal/http/RetryAndFollowUpInterceptor$Companion;
	public fun <init> (Lokhttp3/OkHttpClient;)V
	public fun intercept (Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;
}

public final class okhttp3/internal/http/RetryAndFollowUpInterceptor$Companion {
}

public final class okhttp3/internal/http/StatusLine {
	public static final field Companion Lokhttp3/internal/http/StatusLine$Companion;
	public static final field HTTP_CONTINUE I
	public static final field HTTP_MISDIRECTED_REQUEST I
	public static final field HTTP_PERM_REDIRECT I
	public static final field HTTP_TEMP_REDIRECT I
	public final field code I
	public final field message Ljava/lang/String;
	public final field protocol Lokhttp3/Protocol;
	public fun <init> (Lokhttp3/Protocol;ILjava/lang/String;)V
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/http/StatusLine$Companion {
	public final fun get (Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;
	public final fun parse (Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;
}

public final class okhttp3/internal/http1/HeadersReader {
	public static final field Companion Lokhttp3/internal/http1/HeadersReader$Companion;
	public fun <init> (Lokio/BufferedSource;)V
	public final fun getSource ()Lokio/BufferedSource;
	public final fun readHeaders ()Lokhttp3/Headers;
	public final fun readLine ()Ljava/lang/String;
}

public final class okhttp3/internal/http1/HeadersReader$Companion {
}

public final class okhttp3/internal/http1/Http1ExchangeCodec : okhttp3/internal/http/ExchangeCodec {
	public static final field Companion Lokhttp3/internal/http1/Http1ExchangeCodec$Companion;
	public fun <init> (Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokio/BufferedSource;Lokio/BufferedSink;)V
	public fun cancel ()V
	public fun createRequestBody (Lokhttp3/Request;J)Lokio/Sink;
	public fun finishRequest ()V
	public fun flushRequest ()V
	public fun getConnection ()Lokhttp3/internal/connection/RealConnection;
	public final fun isClosed ()Z
	public fun openResponseBodySource (Lokhttp3/Response;)Lokio/Source;
	public fun readResponseHeaders (Z)Lokhttp3/Response$Builder;
	public fun reportedContentLength (Lokhttp3/Response;)J
	public final fun skipConnectBody (Lokhttp3/Response;)V
	public fun trailers ()Lokhttp3/Headers;
	public final fun writeRequest (Lokhttp3/Headers;Ljava/lang/String;)V
	public fun writeRequestHeaders (Lokhttp3/Request;)V
}

public final class okhttp3/internal/http1/Http1ExchangeCodec$Companion {
}

public final class okhttp3/internal/http2/ConnectionShutdownException : java/io/IOException {
	public fun <init> ()V
}

public final class okhttp3/internal/http2/ErrorCode : java/lang/Enum {
	public static final field CANCEL Lokhttp3/internal/http2/ErrorCode;
	public static final field COMPRESSION_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field CONNECT_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field Companion Lokhttp3/internal/http2/ErrorCode$Companion;
	public static final field ENHANCE_YOUR_CALM Lokhttp3/internal/http2/ErrorCode;
	public static final field FLOW_CONTROL_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field FRAME_SIZE_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field HTTP_1_1_REQUIRED Lokhttp3/internal/http2/ErrorCode;
	public static final field INADEQUATE_SECURITY Lokhttp3/internal/http2/ErrorCode;
	public static final field INTERNAL_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field NO_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field PROTOCOL_ERROR Lokhttp3/internal/http2/ErrorCode;
	public static final field REFUSED_STREAM Lokhttp3/internal/http2/ErrorCode;
	public static final field SETTINGS_TIMEOUT Lokhttp3/internal/http2/ErrorCode;
	public static final field STREAM_CLOSED Lokhttp3/internal/http2/ErrorCode;
	public final fun getHttpCode ()I
	public static fun valueOf (Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;
	public static fun values ()[Lokhttp3/internal/http2/ErrorCode;
}

public final class okhttp3/internal/http2/ErrorCode$Companion {
	public final fun fromHttp2 (I)Lokhttp3/internal/http2/ErrorCode;
}

public final class okhttp3/internal/http2/Header {
	public static final field Companion Lokhttp3/internal/http2/Header$Companion;
	public static final field PSEUDO_PREFIX Lokio/ByteString;
	public static final field RESPONSE_STATUS Lokio/ByteString;
	public static final field RESPONSE_STATUS_UTF8 Ljava/lang/String;
	public static final field TARGET_AUTHORITY Lokio/ByteString;
	public static final field TARGET_AUTHORITY_UTF8 Ljava/lang/String;
	public static final field TARGET_METHOD Lokio/ByteString;
	public static final field TARGET_METHOD_UTF8 Ljava/lang/String;
	public static final field TARGET_PATH Lokio/ByteString;
	public static final field TARGET_PATH_UTF8 Ljava/lang/String;
	public static final field TARGET_SCHEME Lokio/ByteString;
	public static final field TARGET_SCHEME_UTF8 Ljava/lang/String;
	public final field hpackSize I
	public final field name Lokio/ByteString;
	public final field value Lokio/ByteString;
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Lokio/ByteString;Ljava/lang/String;)V
	public fun <init> (Lokio/ByteString;Lokio/ByteString;)V
	public final fun component1 ()Lokio/ByteString;
	public final fun component2 ()Lokio/ByteString;
	public final fun copy (Lokio/ByteString;Lokio/ByteString;)Lokhttp3/internal/http2/Header;
	public static synthetic fun copy$default (Lokhttp3/internal/http2/Header;Lokio/ByteString;Lokio/ByteString;ILjava/lang/Object;)Lokhttp3/internal/http2/Header;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/http2/Header$Companion {
}

public final class okhttp3/internal/http2/Hpack {
	public static final field INSTANCE Lokhttp3/internal/http2/Hpack;
	public final fun checkLowercase (Lokio/ByteString;)Lokio/ByteString;
	public final fun getNAME_TO_FIRST_INDEX ()Ljava/util/Map;
	public final fun getSTATIC_HEADER_TABLE ()[Lokhttp3/internal/http2/Header;
}

public final class okhttp3/internal/http2/Hpack$Reader {
	public field dynamicTable [Lokhttp3/internal/http2/Header;
	public field dynamicTableByteCount I
	public field headerCount I
	public fun <init> (Lokio/Source;I)V
	public fun <init> (Lokio/Source;II)V
	public synthetic fun <init> (Lokio/Source;IIILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getAndResetHeaderList ()Ljava/util/List;
	public final fun maxDynamicTableByteCount ()I
	public final fun readByteString ()Lokio/ByteString;
	public final fun readHeaders ()V
	public final fun readInt (II)I
}

public final class okhttp3/internal/http2/Hpack$Writer {
	public field dynamicTable [Lokhttp3/internal/http2/Header;
	public field dynamicTableByteCount I
	public field headerCount I
	public field headerTableSizeSetting I
	public field maxDynamicTableByteCount I
	public fun <init> (ILokio/Buffer;)V
	public fun <init> (IZLokio/Buffer;)V
	public synthetic fun <init> (IZLokio/Buffer;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lokio/Buffer;)V
	public final fun resizeHeaderTable (I)V
	public final fun writeByteString (Lokio/ByteString;)V
	public final fun writeHeaders (Ljava/util/List;)V
	public final fun writeInt (III)V
}

public final class okhttp3/internal/http2/Http2 {
	public static final field CONNECTION_PREFACE Lokio/ByteString;
	public static final field FLAG_ACK I
	public static final field FLAG_COMPRESSED I
	public static final field FLAG_END_HEADERS I
	public static final field FLAG_END_PUSH_PROMISE I
	public static final field FLAG_END_STREAM I
	public static final field FLAG_NONE I
	public static final field FLAG_PADDED I
	public static final field FLAG_PRIORITY I
	public static final field INITIAL_MAX_FRAME_SIZE I
	public static final field INSTANCE Lokhttp3/internal/http2/Http2;
	public static final field TYPE_CONTINUATION I
	public static final field TYPE_DATA I
	public static final field TYPE_GOAWAY I
	public static final field TYPE_HEADERS I
	public static final field TYPE_PING I
	public static final field TYPE_PRIORITY I
	public static final field TYPE_PUSH_PROMISE I
	public static final field TYPE_RST_STREAM I
	public static final field TYPE_SETTINGS I
	public static final field TYPE_WINDOW_UPDATE I
	public final fun formatFlags (II)Ljava/lang/String;
	public final fun frameLog (ZIIII)Ljava/lang/String;
}

public final class okhttp3/internal/http2/Http2Connection : java/io/Closeable {
	public static final field AWAIT_PING I
	public static final field Companion Lokhttp3/internal/http2/Http2Connection$Companion;
	public static final field DEGRADED_PING I
	public static final field DEGRADED_PONG_TIMEOUT_NS I
	public static final field INTERVAL_PING I
	public static final field OKHTTP_CLIENT_WINDOW_SIZE I
	public final fun awaitPong ()V
	public fun close ()V
	public final fun flush ()V
	public final fun getOkHttpSettings ()Lokhttp3/internal/http2/Settings;
	public final fun getPeerSettings ()Lokhttp3/internal/http2/Settings;
	public final fun getReadBytesAcknowledged ()J
	public final fun getReadBytesTotal ()J
	public final fun getReaderRunnable ()Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;
	public final fun getStream (I)Lokhttp3/internal/http2/Http2Stream;
	public final fun getWriteBytesMaximum ()J
	public final fun getWriteBytesTotal ()J
	public final fun getWriter ()Lokhttp3/internal/http2/Http2Writer;
	public final fun isHealthy (J)Z
	public final fun newStream (Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
	public final fun openStreamCount ()I
	public final fun pushStream (ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;
	public final fun setPeerSettings (Lokhttp3/internal/http2/Settings;)V
	public final fun setSettings (Lokhttp3/internal/http2/Settings;)V
	public final fun shutdown (Lokhttp3/internal/http2/ErrorCode;)V
	public final fun start ()V
	public final fun start (Z)V
	public final fun start (ZLokhttp3/internal/concurrent/TaskRunner;)V
	public static synthetic fun start$default (Lokhttp3/internal/http2/Http2Connection;ZLokhttp3/internal/concurrent/TaskRunner;ILjava/lang/Object;)V
	public final fun writeData (IZLokio/Buffer;J)V
	public final fun writePing ()V
	public final fun writePing (ZII)V
	public final fun writePingAndAwaitPong ()V
}

public final class okhttp3/internal/http2/Http2Connection$Builder {
	public fun <init> (ZLokhttp3/internal/concurrent/TaskRunner;)V
	public final fun build ()Lokhttp3/internal/http2/Http2Connection;
	public final fun listener (Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun pingIntervalMillis (I)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun pushObserver (Lokhttp3/internal/http2/PushObserver;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun socket (Ljava/net/Socket;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun socket (Ljava/net/Socket;Ljava/lang/String;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun socket (Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public final fun socket (Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;
	public static synthetic fun socket$default (Lokhttp3/internal/http2/Http2Connection$Builder;Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;ILjava/lang/Object;)Lokhttp3/internal/http2/Http2Connection$Builder;
}

public final class okhttp3/internal/http2/Http2Connection$Companion {
	public final fun getDEFAULT_SETTINGS ()Lokhttp3/internal/http2/Settings;
}

public abstract class okhttp3/internal/http2/Http2Connection$Listener {
	public static final field Companion Lokhttp3/internal/http2/Http2Connection$Listener$Companion;
	public static final field REFUSE_INCOMING_STREAMS Lokhttp3/internal/http2/Http2Connection$Listener;
	public fun <init> ()V
	public fun onSettings (Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Settings;)V
	public abstract fun onStream (Lokhttp3/internal/http2/Http2Stream;)V
}

public final class okhttp3/internal/http2/Http2Connection$Listener$Companion {
}

public final class okhttp3/internal/http2/Http2Connection$ReaderRunnable : kotlin/jvm/functions/Function0, okhttp3/internal/http2/Http2Reader$Handler {
	public fun ackSettings ()V
	public fun alternateService (ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V
	public final fun applyAndAckSettings (ZLokhttp3/internal/http2/Settings;)V
	public fun data (ZILokio/BufferedSource;I)V
	public fun goAway (ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V
	public fun headers (ZIILjava/util/List;)V
	public synthetic fun invoke ()Ljava/lang/Object;
	public fun invoke ()V
	public fun ping (ZII)V
	public fun priority (IIIZ)V
	public fun pushPromise (IILjava/util/List;)V
	public fun rstStream (ILokhttp3/internal/http2/ErrorCode;)V
	public fun settings (ZLokhttp3/internal/http2/Settings;)V
	public fun windowUpdate (IJ)V
}

public final class okhttp3/internal/http2/Http2ExchangeCodec : okhttp3/internal/http/ExchangeCodec {
	public static final field Companion Lokhttp3/internal/http2/Http2ExchangeCodec$Companion;
	public fun <init> (Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/RealConnection;Lokhttp3/internal/http/RealInterceptorChain;Lokhttp3/internal/http2/Http2Connection;)V
	public fun cancel ()V
	public fun createRequestBody (Lokhttp3/Request;J)Lokio/Sink;
	public fun finishRequest ()V
	public fun flushRequest ()V
	public fun getConnection ()Lokhttp3/internal/connection/RealConnection;
	public fun openResponseBodySource (Lokhttp3/Response;)Lokio/Source;
	public fun readResponseHeaders (Z)Lokhttp3/Response$Builder;
	public fun reportedContentLength (Lokhttp3/Response;)J
	public fun trailers ()Lokhttp3/Headers;
	public fun writeRequestHeaders (Lokhttp3/Request;)V
}

public final class okhttp3/internal/http2/Http2ExchangeCodec$Companion {
	public final fun http2HeadersList (Lokhttp3/Request;)Ljava/util/List;
	public final fun readHttp2HeadersList (Lokhttp3/Headers;Lokhttp3/Protocol;)Lokhttp3/Response$Builder;
}

public final class okhttp3/internal/http2/Http2Reader : java/io/Closeable {
	public static final field Companion Lokhttp3/internal/http2/Http2Reader$Companion;
	public fun <init> (Lokio/BufferedSource;Z)V
	public fun close ()V
	public final fun nextFrame (ZLokhttp3/internal/http2/Http2Reader$Handler;)Z
	public final fun readConnectionPreface (Lokhttp3/internal/http2/Http2Reader$Handler;)V
}

public final class okhttp3/internal/http2/Http2Reader$Companion {
	public final fun getLogger ()Ljava/util/logging/Logger;
	public final fun lengthWithoutPadding (III)I
}

public abstract interface class okhttp3/internal/http2/Http2Reader$Handler {
	public abstract fun ackSettings ()V
	public abstract fun alternateService (ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V
	public abstract fun data (ZILokio/BufferedSource;I)V
	public abstract fun goAway (ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V
	public abstract fun headers (ZIILjava/util/List;)V
	public abstract fun ping (ZII)V
	public abstract fun priority (IIIZ)V
	public abstract fun pushPromise (IILjava/util/List;)V
	public abstract fun rstStream (ILokhttp3/internal/http2/ErrorCode;)V
	public abstract fun settings (ZLokhttp3/internal/http2/Settings;)V
	public abstract fun windowUpdate (IJ)V
}

public final class okhttp3/internal/http2/Http2Stream {
	public static final field Companion Lokhttp3/internal/http2/Http2Stream$Companion;
	public final fun addBytesToWriteWindow (J)V
	public final fun close (Lokhttp3/internal/http2/ErrorCode;Ljava/io/IOException;)V
	public final fun closeLater (Lokhttp3/internal/http2/ErrorCode;)V
	public final fun enqueueTrailers (Lokhttp3/Headers;)V
	public final fun getConnection ()Lokhttp3/internal/http2/Http2Connection;
	public final fun getId ()I
	public final fun getReadBytesAcknowledged ()J
	public final fun getReadBytesTotal ()J
	public final fun getSink ()Lokio/Sink;
	public final fun getSource ()Lokio/Source;
	public final fun getWriteBytesMaximum ()J
	public final fun getWriteBytesTotal ()J
	public final fun isLocallyInitiated ()Z
	public final fun isOpen ()Z
	public final fun readTimeout ()Lokio/Timeout;
	public final fun receiveData (Lokio/BufferedSource;I)V
	public final fun receiveHeaders (Lokhttp3/Headers;Z)V
	public final fun receiveRstStream (Lokhttp3/internal/http2/ErrorCode;)V
	public final fun takeHeaders ()Lokhttp3/Headers;
	public final fun trailers ()Lokhttp3/Headers;
	public final fun writeHeaders (Ljava/util/List;ZZ)V
	public final fun writeTimeout ()Lokio/Timeout;
}

public final class okhttp3/internal/http2/Http2Stream$Companion {
}

public final class okhttp3/internal/http2/Http2Stream$FramingSource : okio/Source {
	public fun close ()V
	public final fun getReadBuffer ()Lokio/Buffer;
	public final fun getReceiveBuffer ()Lokio/Buffer;
	public final fun getTrailers ()Lokhttp3/Headers;
	public fun read (Lokio/Buffer;J)J
	public final fun setTrailers (Lokhttp3/Headers;)V
	public fun timeout ()Lokio/Timeout;
}

public final class okhttp3/internal/http2/Http2Writer : java/io/Closeable {
	public static final field Companion Lokhttp3/internal/http2/Http2Writer$Companion;
	public fun <init> (Lokio/BufferedSink;Z)V
	public final fun applyAndAckSettings (Lokhttp3/internal/http2/Settings;)V
	public fun close ()V
	public final fun connectionPreface ()V
	public final fun data (ZILokio/Buffer;I)V
	public final fun dataFrame (IILokio/Buffer;I)V
	public final fun flush ()V
	public final fun frameHeader (IIII)V
	public final fun getHpackWriter ()Lokhttp3/internal/http2/Hpack$Writer;
	public final fun goAway (ILokhttp3/internal/http2/ErrorCode;[B)V
	public final fun headers (ZILjava/util/List;)V
	public final fun maxDataLength ()I
	public final fun ping (ZII)V
	public final fun pushPromise (IILjava/util/List;)V
	public final fun rstStream (ILokhttp3/internal/http2/ErrorCode;)V
	public final fun settings (Lokhttp3/internal/http2/Settings;)V
	public final fun windowUpdate (IJ)V
}

public final class okhttp3/internal/http2/Http2Writer$Companion {
}

public final class okhttp3/internal/http2/Huffman {
	public static final field INSTANCE Lokhttp3/internal/http2/Huffman;
	public final fun decode (Lokio/BufferedSource;JLokio/BufferedSink;)V
	public final fun encode (Lokio/ByteString;Lokio/BufferedSink;)V
	public final fun encodedLength (Lokio/ByteString;)I
}

public abstract interface class okhttp3/internal/http2/PushObserver {
	public static final field CANCEL Lokhttp3/internal/http2/PushObserver;
	public static final field Companion Lokhttp3/internal/http2/PushObserver$Companion;
	public abstract fun onData (ILokio/BufferedSource;IZ)Z
	public abstract fun onHeaders (ILjava/util/List;Z)Z
	public abstract fun onRequest (ILjava/util/List;)Z
	public abstract fun onReset (ILokhttp3/internal/http2/ErrorCode;)V
}

public final class okhttp3/internal/http2/PushObserver$Companion {
}

public final class okhttp3/internal/http2/Settings {
	public static final field COUNT I
	public static final field Companion Lokhttp3/internal/http2/Settings$Companion;
	public static final field DEFAULT_INITIAL_WINDOW_SIZE I
	public static final field ENABLE_PUSH I
	public static final field HEADER_TABLE_SIZE I
	public static final field INITIAL_WINDOW_SIZE I
	public static final field MAX_CONCURRENT_STREAMS I
	public static final field MAX_FRAME_SIZE I
	public static final field MAX_HEADER_LIST_SIZE I
	public fun <init> ()V
	public final fun clear ()V
	public final fun get (I)I
	public final fun getEnablePush (Z)Z
	public final fun getHeaderTableSize ()I
	public final fun getInitialWindowSize ()I
	public final fun getMaxConcurrentStreams ()I
	public final fun getMaxFrameSize (I)I
	public final fun getMaxHeaderListSize (I)I
	public final fun isSet (I)Z
	public final fun merge (Lokhttp3/internal/http2/Settings;)V
	public final fun set (II)Lokhttp3/internal/http2/Settings;
	public final fun size ()I
}

public final class okhttp3/internal/http2/Settings$Companion {
}

public final class okhttp3/internal/http2/StreamResetException : java/io/IOException {
	public final field errorCode Lokhttp3/internal/http2/ErrorCode;
	public fun <init> (Lokhttp3/internal/http2/ErrorCode;)V
}

public abstract interface class okhttp3/internal/io/FileSystem {
	public static final field Companion Lokhttp3/internal/io/FileSystem$Companion;
	public static final field SYSTEM Lokhttp3/internal/io/FileSystem;
	public abstract fun appendingSink (Ljava/io/File;)Lokio/Sink;
	public abstract fun delete (Ljava/io/File;)V
	public abstract fun deleteContents (Ljava/io/File;)V
	public abstract fun exists (Ljava/io/File;)Z
	public abstract fun rename (Ljava/io/File;Ljava/io/File;)V
	public abstract fun sink (Ljava/io/File;)Lokio/Sink;
	public abstract fun size (Ljava/io/File;)J
	public abstract fun source (Ljava/io/File;)Lokio/Source;
}

public final class okhttp3/internal/io/FileSystem$Companion {
}

public final class okhttp3/internal/platform/Android10Platform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/Android10Platform$Companion;
	public fun <init> ()V
	public fun buildCertificateChainCleaner (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isCleartextTrafficPermitted (Ljava/lang/String;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/Android10Platform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/Platform;
	public final fun isSupported ()Z
}

public final class okhttp3/internal/platform/AndroidPlatform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/AndroidPlatform$Companion;
	public fun <init> ()V
	public fun buildCertificateChainCleaner (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
	public fun buildTrustRootIndex (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun connectSocket (Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun getStackTraceForCloseable (Ljava/lang/String;)Ljava/lang/Object;
	public fun isCleartextTrafficPermitted (Ljava/lang/String;)Z
	public fun logCloseableLeak (Ljava/lang/String;Ljava/lang/Object;)V
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/AndroidPlatform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/Platform;
	public final fun isSupported ()Z
}

public final class okhttp3/internal/platform/BouncyCastlePlatform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/BouncyCastlePlatform$Companion;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun newSSLContext ()Ljavax/net/ssl/SSLContext;
	public fun platformTrustManager ()Ljavax/net/ssl/X509TrustManager;
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/BouncyCastlePlatform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/BouncyCastlePlatform;
	public final fun isSupported ()Z
}

public final class okhttp3/internal/platform/ConscryptPlatform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/ConscryptPlatform$Companion;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun newSSLContext ()Ljavax/net/ssl/SSLContext;
	public fun newSslSocketFactory (Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
	public fun platformTrustManager ()Ljavax/net/ssl/X509TrustManager;
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/ConscryptPlatform$Companion {
	public final fun atLeastVersion (III)Z
	public static synthetic fun atLeastVersion$default (Lokhttp3/internal/platform/ConscryptPlatform$Companion;IIIILjava/lang/Object;)Z
	public final fun buildIfSupported ()Lokhttp3/internal/platform/ConscryptPlatform;
	public final fun isSupported ()Z
}

public final class okhttp3/internal/platform/Jdk8WithJettyBootPlatform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion;
	public fun <init> (Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V
	public fun afterHandshake (Ljavax/net/ssl/SSLSocket;)V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
}

public final class okhttp3/internal/platform/Jdk8WithJettyBootPlatform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/Platform;
}

public class okhttp3/internal/platform/Jdk9Platform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/Jdk9Platform$Companion;
	public fun <init> ()V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/Jdk9Platform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/Jdk9Platform;
	public final fun isAvailable ()Z
}

public final class okhttp3/internal/platform/OpenJSSEPlatform : okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/OpenJSSEPlatform$Companion;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun newSSLContext ()Ljavax/net/ssl/SSLContext;
	public fun platformTrustManager ()Ljavax/net/ssl/X509TrustManager;
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/OpenJSSEPlatform$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/OpenJSSEPlatform;
	public final fun isSupported ()Z
}

public class okhttp3/internal/platform/Platform {
	public static final field Companion Lokhttp3/internal/platform/Platform$Companion;
	public static final field INFO I
	public static final field WARN I
	public fun <init> ()V
	public fun afterHandshake (Ljavax/net/ssl/SSLSocket;)V
	public fun buildCertificateChainCleaner (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
	public fun buildTrustRootIndex (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun connectSocket (Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V
	public static final fun get ()Lokhttp3/internal/platform/Platform;
	public final fun getPrefix ()Ljava/lang/String;
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun getStackTraceForCloseable (Ljava/lang/String;)Ljava/lang/Object;
	public fun isCleartextTrafficPermitted (Ljava/lang/String;)Z
	public fun log (Ljava/lang/String;ILjava/lang/Throwable;)V
	public static synthetic fun log$default (Lokhttp3/internal/platform/Platform;Ljava/lang/String;ILjava/lang/Throwable;ILjava/lang/Object;)V
	public fun logCloseableLeak (Ljava/lang/String;Ljava/lang/Object;)V
	public fun newSSLContext ()Ljavax/net/ssl/SSLContext;
	public fun newSslSocketFactory (Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;
	public fun platformTrustManager ()Ljavax/net/ssl/X509TrustManager;
	public fun toString ()Ljava/lang/String;
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/Platform$Companion {
	public final fun alpnProtocolNames (Ljava/util/List;)Ljava/util/List;
	public final fun concatLengthPrefixed (Ljava/util/List;)[B
	public final fun get ()Lokhttp3/internal/platform/Platform;
	public final fun isAndroid ()Z
	public final fun resetForTests (Lokhttp3/internal/platform/Platform;)V
	public static synthetic fun resetForTests$default (Lokhttp3/internal/platform/Platform$Companion;Lokhttp3/internal/platform/Platform;ILjava/lang/Object;)V
}

public final class okhttp3/internal/platform/android/Android10SocketAdapter : okhttp3/internal/platform/android/SocketAdapter {
	public static final field Companion Lokhttp3/internal/platform/android/Android10SocketAdapter$Companion;
	public fun <init> ()V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isSupported ()Z
	public fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/Android10SocketAdapter$Companion {
	public final fun buildIfSupported ()Lokhttp3/internal/platform/android/SocketAdapter;
	public final fun isSupported ()Z
}

public final class okhttp3/internal/platform/android/AndroidLog {
	public static final field INSTANCE Lokhttp3/internal/platform/android/AndroidLog;
	public final fun enable ()V
}

public final class okhttp3/internal/platform/android/AndroidLogHandler : java/util/logging/Handler {
	public static final field INSTANCE Lokhttp3/internal/platform/android/AndroidLogHandler;
	public fun close ()V
	public fun flush ()V
	public fun publish (Ljava/util/logging/LogRecord;)V
}

public class okhttp3/internal/platform/android/AndroidSocketAdapter : okhttp3/internal/platform/android/SocketAdapter {
	public static final field Companion Lokhttp3/internal/platform/android/AndroidSocketAdapter$Companion;
	public fun <init> (Ljava/lang/Class;)V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isSupported ()Z
	public fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/AndroidSocketAdapter$Companion {
	public final fun factory (Ljava/lang/String;)Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
	public final fun getPlayProviderFactory ()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
}

public final class okhttp3/internal/platform/android/BouncyCastleSocketAdapter : okhttp3/internal/platform/android/SocketAdapter {
	public static final field Companion Lokhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion;
	public fun <init> ()V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isSupported ()Z
	public fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/BouncyCastleSocketAdapter$Companion {
	public final fun getFactory ()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
}

public final class okhttp3/internal/platform/android/ConscryptSocketAdapter : okhttp3/internal/platform/android/SocketAdapter {
	public static final field Companion Lokhttp3/internal/platform/android/ConscryptSocketAdapter$Companion;
	public fun <init> ()V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isSupported ()Z
	public fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/ConscryptSocketAdapter$Companion {
	public final fun getFactory ()Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;
}

public final class okhttp3/internal/platform/android/DeferredSocketAdapter : okhttp3/internal/platform/android/SocketAdapter {
	public fun <init> (Lokhttp3/internal/platform/android/DeferredSocketAdapter$Factory;)V
	public fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public fun isSupported ()Z
	public fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public abstract interface class okhttp3/internal/platform/android/DeferredSocketAdapter$Factory {
	public abstract fun create (Ljavax/net/ssl/SSLSocket;)Lokhttp3/internal/platform/android/SocketAdapter;
	public abstract fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
}

public abstract interface class okhttp3/internal/platform/android/SocketAdapter {
	public abstract fun configureTlsExtensions (Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V
	public abstract fun getSelectedProtocol (Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;
	public abstract fun isSupported ()Z
	public abstract fun matchesSocket (Ljavax/net/ssl/SSLSocket;)Z
	public abstract fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public abstract fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/SocketAdapter$DefaultImpls {
	public static fun matchesSocketFactory (Lokhttp3/internal/platform/android/SocketAdapter;Ljavax/net/ssl/SSLSocketFactory;)Z
	public static fun trustManager (Lokhttp3/internal/platform/android/SocketAdapter;Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/StandardAndroidSocketAdapter : okhttp3/internal/platform/android/AndroidSocketAdapter {
	public static final field Companion Lokhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion;
	public fun <init> (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V
	public fun matchesSocketFactory (Ljavax/net/ssl/SSLSocketFactory;)Z
	public fun trustManager (Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;
}

public final class okhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion {
	public final fun buildIfSupported (Ljava/lang/String;)Lokhttp3/internal/platform/android/SocketAdapter;
	public static synthetic fun buildIfSupported$default (Lokhttp3/internal/platform/android/StandardAndroidSocketAdapter$Companion;Ljava/lang/String;ILjava/lang/Object;)Lokhttp3/internal/platform/android/SocketAdapter;
}

public final class okhttp3/internal/proxy/NullProxySelector : java/net/ProxySelector {
	public static final field INSTANCE Lokhttp3/internal/proxy/NullProxySelector;
	public fun connectFailed (Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V
	public fun select (Ljava/net/URI;)Ljava/util/List;
}

public final class okhttp3/internal/publicsuffix/PublicSuffixDatabase {
	public static final field Companion Lokhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion;
	public static final field PUBLIC_SUFFIX_RESOURCE Ljava/lang/String;
	public fun <init> ()V
	public final fun getEffectiveTldPlusOne (Ljava/lang/String;)Ljava/lang/String;
	public final fun setListBytes ([B[B)V
}

public final class okhttp3/internal/publicsuffix/PublicSuffixDatabase$Companion {
	public final fun get ()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;
}

public final class okhttp3/internal/tls/BasicCertificateChainCleaner : okhttp3/internal/tls/CertificateChainCleaner {
	public static final field Companion Lokhttp3/internal/tls/BasicCertificateChainCleaner$Companion;
	public fun <init> (Lokhttp3/internal/tls/TrustRootIndex;)V
	public fun clean (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
}

public final class okhttp3/internal/tls/BasicCertificateChainCleaner$Companion {
}

public final class okhttp3/internal/tls/BasicTrustRootIndex : okhttp3/internal/tls/TrustRootIndex {
	public fun <init> ([Ljava/security/cert/X509Certificate;)V
	public fun equals (Ljava/lang/Object;)Z
	public fun findByIssuerAndSignature (Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
	public fun hashCode ()I
}

public abstract class okhttp3/internal/tls/CertificateChainCleaner {
	public static final field Companion Lokhttp3/internal/tls/CertificateChainCleaner$Companion;
	public fun <init> ()V
	public abstract fun clean (Ljava/util/List;Ljava/lang/String;)Ljava/util/List;
}

public final class okhttp3/internal/tls/CertificateChainCleaner$Companion {
	public final fun get (Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;
	public final fun get ([Ljava/security/cert/X509Certificate;)Lokhttp3/internal/tls/CertificateChainCleaner;
}

public final class okhttp3/internal/tls/OkHostnameVerifier : javax/net/ssl/HostnameVerifier {
	public static final field INSTANCE Lokhttp3/internal/tls/OkHostnameVerifier;
	public final fun allSubjectAltNames (Ljava/security/cert/X509Certificate;)Ljava/util/List;
	public final fun verify (Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z
	public fun verify (Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z
}

public abstract interface class okhttp3/internal/tls/TrustRootIndex {
	public abstract fun findByIssuerAndSignature (Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;
}

public final class okhttp3/internal/ws/MessageDeflater : java/io/Closeable {
	public fun <init> (Z)V
	public fun close ()V
	public final fun deflate (Lokio/Buffer;)V
}

public final class okhttp3/internal/ws/MessageInflater : java/io/Closeable {
	public fun <init> (Z)V
	public fun close ()V
	public final fun inflate (Lokio/Buffer;)V
}

public final class okhttp3/internal/ws/RealWebSocket : okhttp3/WebSocket, okhttp3/internal/ws/WebSocketReader$FrameCallback {
	public static final field Companion Lokhttp3/internal/ws/RealWebSocket$Companion;
	public static final field DEFAULT_MINIMUM_DEFLATE_SIZE J
	public fun <init> (Lokhttp3/internal/concurrent/TaskRunner;Lokhttp3/Request;Lokhttp3/WebSocketListener;Ljava/util/Random;JLokhttp3/internal/ws/WebSocketExtensions;J)V
	public final fun awaitTermination (JLjava/util/concurrent/TimeUnit;)V
	public fun cancel ()V
	public fun close (ILjava/lang/String;)Z
	public final fun close (ILjava/lang/String;J)Z
	public final fun connect (Lokhttp3/OkHttpClient;)V
	public final fun failWebSocket (Ljava/lang/Exception;Lokhttp3/Response;)V
	public final fun initReaderAndWriter (Ljava/lang/String;Lokhttp3/internal/ws/RealWebSocket$Streams;)V
	public final fun loopReader ()V
	public fun onReadClose (ILjava/lang/String;)V
	public fun onReadMessage (Ljava/lang/String;)V
	public fun onReadMessage (Lokio/ByteString;)V
	public fun onReadPing (Lokio/ByteString;)V
	public fun onReadPong (Lokio/ByteString;)V
	public final fun pong (Lokio/ByteString;)Z
	public final fun processNextFrame ()Z
	public fun queueSize ()J
	public final fun receivedPingCount ()I
	public final fun receivedPongCount ()I
	public fun request ()Lokhttp3/Request;
	public fun send (Ljava/lang/String;)Z
	public fun send (Lokio/ByteString;)Z
	public final fun sentPingCount ()I
	public final fun tearDown ()V
}

public final class okhttp3/internal/ws/RealWebSocket$Companion {
}

public abstract class okhttp3/internal/ws/RealWebSocket$Streams : java/io/Closeable {
	public fun <init> (ZLokio/BufferedSource;Lokio/BufferedSink;)V
	public final fun getClient ()Z
	public final fun getSink ()Lokio/BufferedSink;
	public final fun getSource ()Lokio/BufferedSource;
}

public final class okhttp3/internal/ws/WebSocketExtensions {
	public static final field Companion Lokhttp3/internal/ws/WebSocketExtensions$Companion;
	public final field clientMaxWindowBits Ljava/lang/Integer;
	public final field clientNoContextTakeover Z
	public final field perMessageDeflate Z
	public final field serverMaxWindowBits Ljava/lang/Integer;
	public final field serverNoContextTakeover Z
	public final field unknownValues Z
	public fun <init> ()V
	public fun <init> (ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)V
	public synthetic fun <init> (ZLjava/lang/Integer;ZLjava/lang/Integer;ZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Z
	public final fun component2 ()Ljava/lang/Integer;
	public final fun component3 ()Z
	public final fun component4 ()Ljava/lang/Integer;
	public final fun component5 ()Z
	public final fun component6 ()Z
	public final fun copy (ZLjava/lang/Integer;ZLjava/lang/Integer;ZZ)Lokhttp3/internal/ws/WebSocketExtensions;
	public static synthetic fun copy$default (Lokhttp3/internal/ws/WebSocketExtensions;ZLjava/lang/Integer;ZLjava/lang/Integer;ZZILjava/lang/Object;)Lokhttp3/internal/ws/WebSocketExtensions;
	public fun equals (Ljava/lang/Object;)Z
	public fun hashCode ()I
	public final fun noContextTakeover (Z)Z
	public fun toString ()Ljava/lang/String;
}

public final class okhttp3/internal/ws/WebSocketExtensions$Companion {
	public final fun parse (Lokhttp3/Headers;)Lokhttp3/internal/ws/WebSocketExtensions;
}

public final class okhttp3/internal/ws/WebSocketProtocol {
	public static final field INSTANCE Lokhttp3/internal/ws/WebSocketProtocol;
	public final fun acceptHeader (Ljava/lang/String;)Ljava/lang/String;
	public final fun closeCodeExceptionMessage (I)Ljava/lang/String;
	public final fun toggleMask (Lokio/Buffer$UnsafeCursor;[B)V
	public final fun validateCloseCode (I)V
}

public final class okhttp3/internal/ws/WebSocketReader : java/io/Closeable {
	public fun <init> (ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;ZZ)V
	public fun close ()V
	public final fun getSource ()Lokio/BufferedSource;
	public final fun processNextFrame ()V
}

public abstract interface class okhttp3/internal/ws/WebSocketReader$FrameCallback {
	public abstract fun onReadClose (ILjava/lang/String;)V
	public abstract fun onReadMessage (Ljava/lang/String;)V
	public abstract fun onReadMessage (Lokio/ByteString;)V
	public abstract fun onReadPing (Lokio/ByteString;)V
	public abstract fun onReadPong (Lokio/ByteString;)V
}

public final class okhttp3/internal/ws/WebSocketWriter : java/io/Closeable {
	public fun <init> (ZLokio/BufferedSink;Ljava/util/Random;ZZJ)V
	public fun close ()V
	public final fun getRandom ()Ljava/util/Random;
	public final fun getSink ()Lokio/BufferedSink;
	public final fun writeClose (ILokio/ByteString;)V
	public final fun writeMessageFrame (ILokio/ByteString;)V
	public final fun writePing (Lokio/ByteString;)V
	public final fun writePong (Lokio/ByteString;)V
}

